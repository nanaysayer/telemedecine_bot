{"version":3,"sources":["utterance/utterance.test.ts"],"names":["TOKENS","VECTORS","map","Array","from","length","_","random","POS_TAGS","a","reduce","tags","next","concat","slice","describe","test","utterance","Utterance","expect","tokens","toThrow","index","forEach","tok","i","toEqual","value","vector","POS","toString","lowerCase","realSpaces","SPACE","slots","tagSlot","name","confidence","source","entities","tagEntity","type","metadata","tfidf","setGlobalTfidf","cluster","mockedKmeans","nearest","jest","fn","mockReturnValueOnce","mockReturnValue","setKmeans","mock","calls","slot","startPos","startTokenIdx","endPos","endTokenIdx","entity","Object","entries","key","Math","u2","clone","not","toBe","zip","t1","t2","omit","k","v","str","fakeVectors","t","fakePOS","defaultOptions","onlyWords","u","toLowerCase","replace","testTokens","vecs","globalTFIDF","sentenceEmbedding","actual","idx","toBeCloseTo","expectedEmbeddings","need","advice","regarding","my","statements","invoice","is","incorrectly","calculated","there","mistake","on","statement","want","to","see","the","details","of","what","do","if","have","an","inquiry","about","does","make","sense","monthly","incorrect","how","can","figure","out","im","paying","for","questions","invoices","get","clarification","charge","wrong","dont","understand","something","end","contract","subscription","stop","cancel","terminate","it","possible","now","agreement","with","you","please","give","me","your","help","line","number","phone","best","reach","call","in","contact","business","should","use","seems","like","technical","problem","support","cant","continue","got","working","right","error","computer","issue","ive"],"mappings":";;AAAA;;AAEA;;AAGA;;;;AAEA,MAAMA,MAAM,GAAG,2CAA0B,6EAA1B,CAAf,C,CAAwH;;AACxH,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAP,CAAW,MAAMC,KAAK,CAACC,IAAN,CAAW;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAX,EAA0B,MAAMC,gBAAEC,MAAF,CAAS,CAAT,EAAY,CAAZ,EAAe,IAAf,CAAhC,CAAjB,CAAhB;AACA,MAAMC,QAAQ,GAAG,CACf,MADe,EAEf,MAFe,EAGf,MAHe,EAIf,MAJe,EAKf,MALe,EAMf,OANe,EAOf,OAPe,EAQf,MARe,EASf,KATe,EAUf,MAVe,EAWf,OAXe,EAYf,KAZe,EAaf,KAbe,EAcf,MAde,EAef,OAfe,EAgBf,OAhBe,EAiBf,MAjBe,EAkBf,KAlBe,EAmBf,OAnBe,EAqBdN,GArBc,CAqBVO,CAAC,IAAI,CAACA,CAAD,EAAI,GAAJ,CArBK,EAsBdC,MAtBc,CAsBP,CAACC,IAAD,EAAOC,IAAP,KAAgBD,IAAI,CAACE,MAAL,CAAYD,IAAZ,CAtBT,EAuBdE,KAvBc,CAuBR,CAvBQ,EAuBL,CAAC,CAvBI,CAAjB;AAyBAC,QAAQ,CAAC,gBAAD,EAAmB,MAAM;AAC/BA,EAAAA,QAAQ,CAAC,QAAD,EAAW,MAAM;AACvBC,IAAAA,IAAI,CAAC,mBAAD,EAAsB,MAAM;AAC9B,YAAMC,SAAS,GAAG,IAAIC,kBAAJ,CAAclB,MAAd,EAAsBC,OAAtB,EAA+BO,QAA/B,EAAyC,IAAzC,CAAlB;AACAW,MAAAA,MAAM,CAAC,MAAOF,SAAS,CAACG,MAAV,GAAmB,EAA3B,CAAN,CAAsCC,OAAtC;AACD,KAHG,CAAJ;AAKAL,IAAAA,IAAI,CAAC,0BAAD,EAA6B,MAAM;AACrC,YAAMC,SAAS,GAAG,IAAIC,kBAAJ,CAAclB,MAAd,EAAsBC,OAAtB,EAA+BO,QAA/B,EAAyC,IAAzC,CAAlB;AACAW,MAAAA,MAAM,CAAC,MAAOF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBE,KAApB,GAA4B,EAApC,CAAN,CAA+CD,OAA/C;AACD,KAHG,CAAJ;AAKAL,IAAAA,IAAI,CAAC,gDAAD,EAAmD,MAAM;AAC3D,YAAMC,SAAS,GAAG,IAAIC,kBAAJ,CAAclB,MAAd,EAAsBC,OAAtB,EAA+BO,QAA/B,EAAyC,IAAzC,CAAlB;AACAS,MAAAA,SAAS,CAACG,MAAV,CAAiBG,OAAjB,CAAyB,CAACC,GAAD,EAAMC,CAAN,KAAY;AACnCN,QAAAA,MAAM,CAACK,GAAG,CAACF,KAAL,CAAN,CAAkBI,OAAlB,CAA0BD,CAA1B;AACAN,QAAAA,MAAM,CAACK,GAAG,CAACG,KAAL,CAAN,CAAkBD,OAAlB,CAA0B1B,MAAM,CAACyB,CAAD,CAAhC;AACAN,QAAAA,MAAM,CAACK,GAAG,CAACI,MAAL,CAAN,CAAmBF,OAAnB,CAA2BzB,OAAO,CAACwB,CAAD,CAAlC;AACAN,QAAAA,MAAM,CAACK,GAAG,CAACK,GAAL,CAAN,CAAgBH,OAAhB,CAAwBlB,QAAQ,CAACiB,CAAD,CAAhC;AACD,OALD;AAMD,KARG,CAAJ;AAUAT,IAAAA,IAAI,CAAC,4CAAD,EAA+C,MAAM;AACvDG,MAAAA,MAAM,CAAC,MAAM,IAAID,kBAAJ,CAAclB,MAAM,CAACc,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAd,EAAmCb,OAAnC,EAA4CO,QAA5C,EAAsD,IAAtD,CAAP,CAAN,CAA0Ea,OAA1E;AACD,KAFG,CAAJ;AAIAL,IAAAA,IAAI,CAAC,UAAD,EAAa,MAAM;AACrB,YAAMC,SAAS,GAAG,IAAIC,kBAAJ,CAAclB,MAAd,EAAsBC,OAAtB,EAA+BO,QAA/B,EAAyC,IAAzC,CAAlB;AAEAW,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBU,QAApB,EAAD,CAAN,CAAuCJ,OAAvC,CAA+C,KAA/C;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBU,QAApB,CAA6B;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAA7B,CAAD,CAAN,CAA0DL,OAA1D,CAAkE,KAAlE;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBU,QAApB,EAAD,CAAN,CAAuCJ,OAAvC,CAA+C,GAA/C;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBU,QAApB,CAA6B;AAAEE,QAAAA,UAAU,EAAE;AAAd,OAA7B,CAAD,CAAN,CAA2DN,OAA3D,CAAmE,GAAnE;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBU,QAApB,CAA6B;AAAEE,QAAAA,UAAU,EAAE;AAAd,OAA7B,CAAD,CAAN,CAA4DN,OAA5D,CAAoEO,iBAApE;AACD,KARG,CAAJ;AAUAjB,IAAAA,IAAI,CAAC,OAAD,EAAU,MAAM;AAClB,YAAMC,SAAS,GAAG,IAAIC,kBAAJ,CAAclB,MAAd,EAAsBC,OAAtB,EAA+BO,QAA/B,EAAyC,IAAzC,CAAlB;AAEAW,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBc,KAArB,CAAN,CAAkCR,OAAlC,CAA0C,EAA1C;AACAT,MAAAA,SAAS,CAACkB,OAAV,CAAkB;AAAEC,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,UAAU,EAAE,IAA9B;AAAoCC,QAAAA,MAAM,EAAE;AAA5C,OAAlB,EAA4E,CAA5E,EAA+E,CAA/E;AAEAnB,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBc,KAApB,CAA0B7B,MAA3B,CAAN,CAAyCqB,OAAzC,CAAiD,CAAjD;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBc,KAApB,CAA0B7B,MAA3B,CAAN,CAAyCqB,OAAzC,CAAiD,CAAjD;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBc,KAApB,CAA0B7B,MAA3B,CAAN,CAAyCqB,OAAzC,CAAiD,CAAjD;AACD,KATG,CAAJ;AAWAV,IAAAA,IAAI,CAAC,UAAD,EAAa,MAAM;AACrB,YAAMC,SAAS,GAAG,IAAIC,kBAAJ,CAAclB,MAAd,EAAsBC,OAAtB,EAA+BO,QAA/B,EAAyC,IAAzC,CAAlB;AACAW,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBmB,QAArB,CAAN,CAAqCb,OAArC,CAA6C,EAA7C;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBmB,QAArB,CAAN,CAAqCb,OAArC,CAA6C,EAA7C;AACAT,MAAAA,SAAS,CAACuB,SAAV,CAAoB;AAAEC,QAAAA,IAAI,EAAE,KAAR;AAAeJ,QAAAA,UAAU,EAAE,IAA3B;AAAiCV,QAAAA,KAAK,EAAE,UAAxC;AAAoDe,QAAAA,QAAQ,EAAE;AAA9D,OAApB,EAAwF,CAAxF,EAA2F,EAA3F;AAEAvB,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBmB,QAApB,CAA6BlC,MAA9B,CAAN,CAA4CqB,OAA5C,CAAoD,CAApD;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBmB,QAApB,CAA6BlC,MAA9B,CAAN,CAA4CqB,OAA5C,CAAoD,CAApD;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBmB,QAApB,CAA6BlC,MAA9B,CAAN,CAA4CqB,OAA5C,CAAoD,CAApD;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBmB,QAApB,CAA6BlC,MAA9B,CAAN,CAA4CqB,OAA5C,CAAoD,CAApD;AACD,KAVG,CAAJ;AAYAV,IAAAA,IAAI,CAAC,OAAD,EAAU,MAAM;AAClB,YAAMC,SAAS,GAAG,IAAIC,kBAAJ,CAAclB,MAAd,EAAsBC,OAAtB,EAA+BO,QAA/B,EAAyC,IAAzC,CAAlB;AAEAW,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBuB,KAArB,CAAN,CAAkCjB,OAAlC,CAA0C,CAA1C;AACA,YAAMiB,KAAK,GAAG;AACZ,SAAC3C,MAAM,CAAC,CAAD,CAAP,GAAa;AADD,OAAd;AAIAiB,MAAAA,SAAS,CAAC2B,cAAV,CAAyBD,KAAzB;AACAxB,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBuB,KAArB,CAAN,CAAkCjB,OAAlC,CAA0C,KAA1C;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBuB,KAArB,CAAN,CAAkCjB,OAAlC,CAA0C,CAA1C;AACD,KAXG,CAAJ;AAaAV,IAAAA,IAAI,CAAC,QAAD,EAAW,MAAM;AACnB,YAAMC,SAAS,GAAG,IAAIC,kBAAJ,CAAclB,MAAd,EAAsBC,OAAtB,EAA+BO,QAA/B,EAAyC,IAAzC,CAAlB;AAEAW,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoByB,OAArB,CAAN,CAAoCnB,OAApC,CAA4C,CAA5C;AACA,YAAMoB,YAAY,GAAG;AACnBC,QAAAA,OAAO,EAAEC,IAAI,CACVC,EADM,GAENC,mBAFM,CAEc,CAAC,CAAD,CAFd,EAGNC,eAHM,CAGU,CAAC,CAAD,CAHV;AADU,OAArB;AAOAlC,MAAAA,SAAS,CAACmC,SAAV,CAAoBN,YAApB;AACA3B,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoByB,OAArB,CAAN,CAAoCnB,OAApC,CAA4C,CAA5C;AACAP,MAAAA,MAAM,CAAC2B,YAAY,CAACC,OAAb,CAAqBM,IAArB,CAA0BC,KAA1B,CAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,CAAD,CAAN,CAAiD5B,OAAjD,CAAyDzB,OAAO,CAAC,CAAD,CAAhE;AACAkB,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoByB,OAArB,CAAN,CAAoCnB,OAApC,CAA4C,CAA5C;AACAP,MAAAA,MAAM,CAAC2B,YAAY,CAACC,OAAb,CAAqBM,IAArB,CAA0BC,KAA1B,CAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,CAAD,CAAN,CAAiD5B,OAAjD,CAAyDzB,OAAO,CAAC,CAAD,CAAhE;AACD,KAhBG,CAAJ;AAiBD,GAxFO,CAAR;AA0FAc,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtB,UAAMwC,IAAmB,GAAG;AAC1BnB,MAAAA,IAAI,EAAE,QADoB;AAE1BC,MAAAA,UAAU,EAAE,CAFc;AAG1BC,MAAAA,MAAM,EAAE;AAHkB,KAA5B;AAMAtB,IAAAA,IAAI,CAAC,uBAAD,EAA0B,MAAM;AAClC,YAAMC,SAAS,GAAG,IAAIC,kBAAJ,CAAclB,MAAd,EAAsBC,OAAtB,EAA+BO,QAA/B,EAAyC,IAAzC,CAAlB;AACAW,MAAAA,MAAM,CAAC,MAAMF,SAAS,CAACkB,OAAV,CAAkBoB,IAAlB,EAAwB,GAAxB,EAA6B,GAA7B,CAAP,CAAN,CAAgDlC,OAAhD;AACAF,MAAAA,MAAM,CAACF,SAAS,CAACiB,KAAX,CAAN,CAAwBR,OAAxB,CAAgC,EAAhC;AACD,KAJG,CAAJ;AAMAV,IAAAA,IAAI,CAAC,uBAAD,EAA0B,MAAM;AAClC,YAAMC,SAAS,GAAG,IAAIC,kBAAJ,CAAclB,MAAd,EAAsBC,OAAtB,EAA+BO,QAA/B,EAAyC,IAAzC,CAAlB;AACAS,MAAAA,SAAS,CAACkB,OAAV,CAAkBoB,IAAlB,EAAwB,CAAxB,EAA2B,CAA3B;AACApC,MAAAA,MAAM,CAACF,SAAS,CAACiB,KAAV,CAAgB,CAAhB,EAAmBsB,QAApB,CAAN,CAAoC9B,OAApC,CAA4C,CAA5C;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACiB,KAAV,CAAgB,CAAhB,EAAmBuB,aAApB,CAAN,CAAyC/B,OAAzC,CAAiD,CAAjD;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACiB,KAAV,CAAgB,CAAhB,EAAmBwB,MAApB,CAAN,CAAkChC,OAAlC,CAA0C,CAA1C;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACiB,KAAV,CAAgB,CAAhB,EAAmByB,WAApB,CAAN,CAAuCjC,OAAvC,CAA+C,CAA/C;AACD,KAPG,CAAJ;AASAV,IAAAA,IAAI,CAAC,0BAAD,EAA6B,MAAM;AACrC,YAAMC,SAAS,GAAG,IAAIC,kBAAJ,CAAclB,MAAd,EAAsBC,OAAtB,EAA+BO,QAA/B,EAAyC,IAAzC,CAAlB;AACAS,MAAAA,SAAS,CAACkB,OAAV,CAAkBoB,IAAlB,EAAwB,CAAxB,EAA2B,CAA3B;AAEApC,MAAAA,MAAM,CAACF,SAAS,CAACiB,KAAV,CAAgB,CAAhB,EAAmBsB,QAApB,CAAN,CAAoC9B,OAApC,CAA4C,CAA5C;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACiB,KAAV,CAAgB,CAAhB,EAAmBuB,aAApB,CAAN,CAAyC/B,OAAzC,CAAiD,CAAjD;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACiB,KAAV,CAAgB,CAAhB,EAAmBwB,MAApB,CAAN,CAAkChC,OAAlC,CAA0C,CAA1C;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACiB,KAAV,CAAgB,CAAhB,EAAmByB,WAApB,CAAN,CAAuCjC,OAAvC,CAA+C,CAA/C;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBc,KAApB,CAA0B7B,MAA3B,CAAN,CAAyCqB,OAAzC,CAAiD,CAAjD;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBc,KAApB,CAA0B,CAA1B,EAA6BE,IAA9B,CAAN,CAA0CV,OAA1C,CAAkD6B,IAAI,CAACnB,IAAvD;AACAjB,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBc,KAApB,CAA0B,CAA1B,EAA6BI,MAA9B,CAAN,CAA4CZ,OAA5C,CAAoD6B,IAAI,CAACjB,MAAzD;AACAnB,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBc,KAApB,CAA0B,CAA1B,EAA6BG,UAA9B,CAAN,CAAgDX,OAAhD,CAAwD6B,IAAI,CAAClB,UAA7D;AACAlB,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBc,KAApB,CAA0B7B,MAA3B,CAAN,CAAyCqB,OAAzC,CAAiD,CAAjD;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBc,KAApB,CAA0B,CAA1B,EAA6BE,IAA9B,CAAN,CAA0CV,OAA1C,CAAkD6B,IAAI,CAACnB,IAAvD;AACAjB,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBc,KAApB,CAA0B,CAA1B,EAA6BI,MAA9B,CAAN,CAA4CZ,OAA5C,CAAoD6B,IAAI,CAACjB,MAAzD;AACAnB,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBc,KAApB,CAA0B,CAA1B,EAA6BG,UAA9B,CAAN,CAAgDX,OAAhD,CAAwD6B,IAAI,CAAClB,UAA7D;AACAlB,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBc,KAApB,CAA0B7B,MAA3B,CAAN,CAAyCqB,OAAzC,CAAiD,CAAjD;AACD,KAjBG,CAAJ;AAkBD,GAxCO,CAAR;AA0CAX,EAAAA,QAAQ,CAAC,UAAD,EAAa,MAAM;AACzB,UAAM6C,MAAuB,GAAG;AAC9BnB,MAAAA,IAAI,EAAE,QADwB;AAE9BJ,MAAAA,UAAU,EAAE,CAFkB;AAG9BV,MAAAA,KAAK,EAAE,KAHuB;AAI9Be,MAAAA,QAAQ,EAAE;AACRf,QAAAA,KAAK,EAAE;AADC;AAJoB,KAAhC;AASAX,IAAAA,IAAI,CAAC,wBAAD,EAA2B,MAAM;AACnC,YAAMC,SAAS,GAAG,IAAIC,kBAAJ,CAAclB,MAAd,EAAsBC,OAAtB,EAA+BO,QAA/B,EAAyC,IAAzC,CAAlB;AACAW,MAAAA,MAAM,CAAC,MAAMF,SAAS,CAACuB,SAAV,CAAoBoB,MAApB,EAA4B,GAA5B,EAAiC,IAAjC,CAAP,CAAN,CAAqDvC,OAArD;AACD,KAHG,CAAJ;AAKAL,IAAAA,IAAI,CAAC,wBAAD,EAA2B,MAAM;AACnC,YAAMC,SAAS,GAAG,IAAIC,kBAAJ,CAAclB,MAAd,EAAsBC,OAAtB,EAA+BO,QAA/B,EAAyC,IAAzC,CAAlB;AACAS,MAAAA,SAAS,CAACuB,SAAV,CAAoBoB,MAApB,EAA4B,CAA5B,EAA+B,CAA/B;AACAzC,MAAAA,MAAM,CAACF,SAAS,CAACsB,QAAV,CAAmBlC,MAApB,CAAN,CAAkCqB,OAAlC,CAA0C,CAA1C;AACAmC,MAAAA,MAAM,CAACC,OAAP,CAAeF,MAAf,EAAuBrC,OAAvB,CAA+B,CAAC,CAACwC,GAAD,EAAMpC,KAAN,CAAD,KAAkB;AAC/CR,QAAAA,MAAM,CAACF,SAAS,CAACsB,QAAV,CAAmB,CAAnB,EAAsBwB,GAAtB,CAAD,CAAN,CAAmCrC,OAAnC,CAA2CC,KAA3C;AACD,OAFD;AAGAR,MAAAA,MAAM,CAACF,SAAS,CAACsB,QAAV,CAAmB,CAAnB,EAAsBiB,QAAvB,CAAN,CAAuC9B,OAAvC,CAA+C,CAA/C;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACsB,QAAV,CAAmB,CAAnB,EAAsBkB,aAAvB,CAAN,CAA4C/B,OAA5C,CAAoD,CAApD;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACsB,QAAV,CAAmB,CAAnB,EAAsBmB,MAAvB,CAAN,CAAqChC,OAArC,CAA6C,CAA7C;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACsB,QAAV,CAAmB,CAAnB,EAAsBoB,WAAvB,CAAN,CAA0CjC,OAA1C,CAAkD,CAAlD;AACD,KAXG,CAAJ;AAaAV,IAAAA,IAAI,CAAC,2BAAD,EAA8B,MAAM;AACtC,YAAMC,SAAS,GAAG,IAAIC,kBAAJ,CAAclB,MAAd,EAAsBC,OAAtB,EAA+BO,QAA/B,EAAyC,IAAzC,CAAlB;AACAS,MAAAA,SAAS,CAACuB,SAAV,CAAoBoB,MAApB,EAA4B,CAA5B,EAA+B,CAA/B;AAEAzC,MAAAA,MAAM,CAACF,SAAS,CAACsB,QAAV,CAAmB,CAAnB,EAAsBiB,QAAvB,CAAN,CAAuC9B,OAAvC,CAA+C,CAA/C;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACsB,QAAV,CAAmB,CAAnB,EAAsBkB,aAAvB,CAAN,CAA4C/B,OAA5C,CAAoD,CAApD;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACsB,QAAV,CAAmB,CAAnB,EAAsBmB,MAAvB,CAAN,CAAqChC,OAArC,CAA6C,CAA7C;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACsB,QAAV,CAAmB,CAAnB,EAAsBoB,WAAvB,CAAN,CAA0CjC,OAA1C,CAAkD,CAAlD;AACAP,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBmB,QAApB,CAA6BlC,MAA9B,CAAN,CAA4CqB,OAA5C,CAAoD,CAApD;AACAmC,MAAAA,MAAM,CAACC,OAAP,CAAeF,MAAf,EAAuBrC,OAAvB,CAA+B,CAAC,CAACwC,GAAD,EAAMpC,KAAN,CAAD,KAAkB;AAC/CR,QAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBmB,QAApB,CAA6B,CAA7B,EAAgCwB,GAAhC,CAAD,CAAN,CAA6CrC,OAA7C,CAAqDC,KAArD;AACD,OAFD;AAGAR,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBmB,QAApB,CAA6BlC,MAA9B,CAAN,CAA4CqB,OAA5C,CAAoD,CAApD;AACAmC,MAAAA,MAAM,CAACC,OAAP,CAAeF,MAAf,EAAuBrC,OAAvB,CAA+B,CAAC,CAACwC,GAAD,EAAMpC,KAAN,CAAD,KAAkB;AAC/CR,QAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBmB,QAApB,CAA6B,CAA7B,EAAgCwB,GAAhC,CAAD,CAAN,CAA6CrC,OAA7C,CAAqDC,KAArD;AACD,OAFD;AAGAR,MAAAA,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBmB,QAApB,CAA6BlC,MAA9B,CAAN,CAA4CqB,OAA5C,CAAoD,CAApD;AACD,KAjBG,CAAJ;AAkBD,GA9CO,CAAR;AAgDAX,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtB,UAAME,SAAS,GAAG,IAAIC,kBAAJ,CAAclB,MAAd,EAAsBC,OAAtB,EAA+BO,QAA/B,EAAyC,IAAzC,CAAlB;AACA,UAAMmC,KAAK,GAAG3C,MAAM,CAACU,MAAP,CAAc,CAACiC,KAAD,EAAQnB,GAAR,KAAgB;AAC1C,UAAI,CAACmB,KAAK,CAACnB,GAAD,CAAV,EAAiB;AACfmB,QAAAA,KAAK,CAACnB,GAAD,CAAL,GAAawC,IAAI,CAACzD,MAAL,EAAb;AACD;;AACD,aAAOoC,KAAP;AACD,KALa,EAKX,EALW,CAAd;AAMA1B,IAAAA,SAAS,CAAC2B,cAAV,CAAyBD,KAAzB;AACA1B,IAAAA,SAAS,CAACkB,OAAV,CAAkB;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,UAAU,EAAE,CAA5B;AAA+BC,MAAAA,MAAM,EAAE;AAAvC,KAAlB,EAAkE,CAAlE,EAAqE,EAArE;AACArB,IAAAA,SAAS,CAACuB,SAAV,CAAoB;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBd,MAAAA,KAAK,EAAE,QAAvB;AAAiCU,MAAAA,UAAU,EAAE,CAA7C;AAAgDK,MAAAA,QAAQ,EAAE;AAA1D,KAApB,EAAoF,EAApF,EAAwF,EAAxF;AAEA1B,IAAAA,IAAI,CAAC,YAAD,EAAe,MAAM;AACvB,YAAMiD,EAAE,GAAGhD,SAAS,CAACiD,KAAV,CAAgB,KAAhB,EAAuB,KAAvB,CAAX;AAEA/C,MAAAA,MAAM,CAAC8C,EAAD,CAAN,CAAWE,GAAX,CAAeC,IAAf,CAAoBnD,SAApB;AACAE,MAAAA,MAAM,CAAC8C,EAAE,CAAC/B,KAAJ,CAAN,CAAiBR,OAAjB,CAAyB,EAAzB;AACAP,MAAAA,MAAM,CAAC8C,EAAE,CAAC1B,QAAJ,CAAN,CAAoBb,OAApB,CAA4B,EAA5B;;AACApB,sBAAE+D,GAAF,CAAMpD,SAAS,CAACG,MAAhB,EAAwB6C,EAAE,CAAC7C,MAA3B,EAAmCG,OAAnC,CAA2C,CAAC,CAAC+C,EAAD,EAAKC,EAAL,CAAD,KAAc;AACvDV,QAAAA,MAAM,CAACC,OAAP,CAAexD,gBAAEkE,IAAF,CAAOF,EAAP,EAAW,OAAX,EAAoB,UAApB,EAAgC,UAAhC,CAAf,EAA4D/C,OAA5D,CAAoE,CAAC,CAACkD,CAAD,EAAIC,CAAJ,CAAD,KAAYvD,MAAM,CAACuD,CAAD,CAAN,CAAUhD,OAAV,CAAkB6C,EAAE,CAACE,CAAD,CAApB,CAAhF;AACD,OAFD;AAGD,KATG,CAAJ;AAWAzD,IAAAA,IAAI,CAAC,eAAD,EAAkB,MAAM;AAC1B,YAAMiD,EAAE,GAAGhD,SAAS,CAACiD,KAAV,CAAgB,IAAhB,EAAsB,KAAtB,CAAX;AAEA/C,MAAAA,MAAM,CAAC8C,EAAD,CAAN,CAAWE,GAAX,CAAeC,IAAf,CAAoBnD,SAApB;AACAE,MAAAA,MAAM,CAAC8C,EAAE,CAAC1B,QAAJ,CAAN,CAAoBb,OAApB,CAA4BT,SAAS,CAACsB,QAAtC;AACApB,MAAAA,MAAM,CAAC8C,EAAE,CAAC/B,KAAJ,CAAN,CAAiBR,OAAjB,CAAyB,EAAzB;;AACApB,sBAAE+D,GAAF,CAAMpD,SAAS,CAACG,MAAhB,EAAwB6C,EAAE,CAAC7C,MAA3B,EAAmCG,OAAnC,CAA2C,CAAC,CAAC+C,EAAD,EAAKC,EAAL,CAAD,KAAc;AACvDV,QAAAA,MAAM,CAACC,OAAP,CAAexD,gBAAEkE,IAAF,CAAOF,EAAP,EAAW,OAAX,EAAoB,UAApB,CAAf,EAAgD/C,OAAhD,CAAwD,CAAC,CAACkD,CAAD,EAAIC,CAAJ,CAAD,KAAYvD,MAAM,CAACuD,CAAD,CAAN,CAAUhD,OAAV,CAAkB6C,EAAE,CAACE,CAAD,CAApB,CAApE;AACD,OAFD;AAGD,KATG,CAAJ;AAWAzD,IAAAA,IAAI,CAAC,YAAD,EAAe,MAAM;AACvB,YAAMiD,EAAE,GAAGhD,SAAS,CAACiD,KAAV,CAAgB,KAAhB,EAAuB,IAAvB,CAAX;AAEA/C,MAAAA,MAAM,CAAC8C,EAAD,CAAN,CAAWE,GAAX,CAAeC,IAAf,CAAoBnD,SAApB;AACAE,MAAAA,MAAM,CAAC8C,EAAE,CAAC1B,QAAJ,CAAN,CAAoBb,OAApB,CAA4B,EAA5B;AACAP,MAAAA,MAAM,CAAC8C,EAAE,CAAC/B,KAAJ,CAAN,CAAiBR,OAAjB,CAAyBT,SAAS,CAACiB,KAAnC;;AACA5B,sBAAE+D,GAAF,CAAMpD,SAAS,CAACG,MAAhB,EAAwB6C,EAAE,CAAC7C,MAA3B,EAAmCG,OAAnC,CAA2C,CAAC,CAAC+C,EAAD,EAAKC,EAAL,CAAD,KAAc;AACvDV,QAAAA,MAAM,CAACC,OAAP,CAAexD,gBAAEkE,IAAF,CAAOF,EAAP,EAAW,UAAX,EAAuB,UAAvB,CAAf,EAAmD/C,OAAnD,CAA2D,CAAC,CAACkD,CAAD,EAAIC,CAAJ,CAAD,KAAYvD,MAAM,CAACuD,CAAD,CAAN,CAAUhD,OAAV,CAAkB6C,EAAE,CAACE,CAAD,CAApB,CAAvE;AACD,OAFD;AAGD,KATG,CAAJ;AAWAzD,IAAAA,IAAI,CAAC,yBAAD,EAA4B,MAAM;AACpC,YAAMiD,EAAE,GAAGhD,SAAS,CAACiD,KAAV,CAAgB,IAAhB,EAAsB,IAAtB,CAAX;AAEA/C,MAAAA,MAAM,CAAC8C,EAAD,CAAN,CAAWE,GAAX,CAAeC,IAAf,CAAoBnD,SAApB;AACAE,MAAAA,MAAM,CAAC8C,EAAE,CAAC1B,QAAJ,CAAN,CAAoBb,OAApB,CAA4BT,SAAS,CAACsB,QAAtC;AACApB,MAAAA,MAAM,CAAC8C,EAAE,CAAC/B,KAAJ,CAAN,CAAiBR,OAAjB,CAAyBT,SAAS,CAACiB,KAAnC;;AACA5B,sBAAE+D,GAAF,CAAMpD,SAAS,CAACG,MAAhB,EAAwB6C,EAAE,CAAC7C,MAA3B,EAAmCG,OAAnC,CAA2C,CAAC,CAAC+C,EAAD,EAAKC,EAAL,CAAD,KAAc;AACvDV,QAAAA,MAAM,CAACC,OAAP,CAAexD,gBAAEkE,IAAF,CAAOF,EAAP,EAAW,UAAX,CAAf,EAAuC/C,OAAvC,CAA+C,CAAC,CAACkD,CAAD,EAAIC,CAAJ,CAAD,KAAYvD,MAAM,CAACuD,CAAD,CAAN,CAAUhD,OAAV,CAAkB6C,EAAE,CAACE,CAAD,CAApB,CAA3D;AACD,OAFD;AAGD,KATG,CAAJ;AAUD,GAvDO,CAAR;AAyDA1D,EAAAA,QAAQ,CAAC,UAAD,EAAa,MAAM;AACzB,UAAM4D,GAAG,GAAG,8BAAZ,CADyB,CAEzB;;AACA,UAAMvD,MAAM,GAAG,2CAA0BuD,GAA1B,CAAf;AACA,UAAMC,WAAW,GAAGxD,MAAM,CAAClB,GAAP,CAAW2E,CAAC,IAAI,EAAhB,CAApB;AACA,UAAMC,OAAO,GAAG1D,MAAM,CAAClB,GAAP,CAAW2E,CAAC,IAAI,KAAhB,CAAhB;AACA,UAAME,cAAc,GAAG;AACrBxC,MAAAA,QAAQ,EAAE,cADW;AAErBL,MAAAA,KAAK,EAAE,YAFc;AAGrB8C,MAAAA,SAAS,EAAE,KAHU;AAIrBjD,MAAAA,SAAS,EAAE;AAJU,KAAvB;AAOAf,IAAAA,IAAI,CAAC,gBAAD,EAAmB,MAAM;AAC3B,YAAMiE,CAAC,GAAG,IAAI/D,kBAAJ,CAAcE,MAAd,EAAsBwD,WAAtB,EAAmCE,OAAnC,EAA4C,IAA5C,CAAV;AAEA3D,MAAAA,MAAM,CAAC8D,CAAC,CAACnD,QAAF,CAAWiD,cAAX,CAAD,CAAN,CAAmCrD,OAAnC,CAA2CiD,GAA3C;AACAxD,MAAAA,MAAM,CAAC8D,CAAC,CAACnD,QAAF,CAAW,EAAE,GAAGiD,cAAL;AAAqBhD,QAAAA,SAAS,EAAE;AAAhC,OAAX,CAAD,CAAN,CAA2DL,OAA3D,CAAmEiD,GAAG,CAACO,WAAJ,EAAnE;AACA/D,MAAAA,MAAM,CAAC8D,CAAC,CAACnD,QAAF,CAAW,EAAE,GAAGiD,cAAL;AAAqBC,QAAAA,SAAS,EAAE;AAAhC,OAAX,CAAD,CAAN,CAA2DtD,OAA3D,CAAmEiD,GAAG,CAACQ,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,CAAnE;AACAhE,MAAAA,MAAM,CAAC8D,CAAC,CAACnD,QAAF,CAAW,EAAE,GAAGiD,cAAL;AAAqBC,QAAAA,SAAS,EAAE,IAAhC;AAAsCjD,QAAAA,SAAS,EAAE;AAAjD,OAAX,CAAD,CAAN,CAA4EL,OAA5E,CACEiD,GAAG,CAACQ,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,EAAuBD,WAAvB,EADF;AAGD,KATG,CAAJ;AAWAlE,IAAAA,IAAI,CAAC,cAAD,EAAiB,MAAM;AACzB,YAAMiE,CAAC,GAAG,IAAI/D,kBAAJ,CAAcE,MAAd,EAAsBwD,WAAtB,EAAmCE,OAAnC,EAA4C,IAA5C,CAAV;AACA,YAAMvB,IAAmB,GAAG;AAC1BnB,QAAAA,IAAI,EAAE,OADoB;AAE1BC,QAAAA,UAAU,EAAE,CAFc;AAG1BC,QAAAA,MAAM,EAAE;AAHkB,OAA5B;AAKA2C,MAAAA,CAAC,CAAC9C,OAAF,CAAUoB,IAAV,EAAgB,EAAhB,EAAoB,EAApB;AAEApC,MAAAA,MAAM,CAAC8D,CAAC,CAACnD,QAAF,CAAWiD,cAAX,CAAD,CAAN,CAAmCrD,OAAnC,CAA2CiD,GAA3C;AACAxD,MAAAA,MAAM,CAAC8D,CAAC,CAACnD,QAAF,CAAW,EAAE,GAAGiD,cAAL;AAAqB7C,QAAAA,KAAK,EAAE;AAA5B,OAAX,CAAD,CAAN,CAA8DR,OAA9D,CAAuE,aAAY6B,IAAI,CAACnB,IAAK,WAA7F;AACAjB,MAAAA,MAAM,CAAC8D,CAAC,CAACnD,QAAF,CAAW,EAAE,GAAGiD,cAAL;AAAqB7C,QAAAA,KAAK,EAAE;AAA5B,OAAX,CAAD,CAAN,CAA2DR,OAA3D,CAAoE,qBAApE;AACD,KAZG,CAAJ;AAcAV,IAAAA,IAAI,CAAC,kBAAD,EAAqB,MAAM;AAC7B,YAAMiE,CAAC,GAAG,IAAI/D,kBAAJ,CAAcE,MAAd,EAAsBwD,WAAtB,EAAmCE,OAAnC,EAA4C,IAA5C,CAAV;AACA,YAAMlB,MAAuB,GAAG;AAC9BnB,QAAAA,IAAI,EAAE,OADwB;AAE9BJ,QAAAA,UAAU,EAAE,CAFkB;AAG9BV,QAAAA,KAAK,EAAE,KAHuB;AAI9Be,QAAAA,QAAQ,EAAE;AAJoB,OAAhC;AAMAuC,MAAAA,CAAC,CAACzC,SAAF,CAAYoB,MAAZ,EAAoB,EAApB,EAAwB,EAAxB;AAEAzC,MAAAA,MAAM,CAAC8D,CAAC,CAACnD,QAAF,CAAWiD,cAAX,CAAD,CAAN,CAAmCrD,OAAnC,CAA2CiD,GAA3C;AACAxD,MAAAA,MAAM,CAAC8D,CAAC,CAACnD,QAAF,CAAW,EAAE,GAAGiD,cAAL;AAAqBxC,QAAAA,QAAQ,EAAE;AAA/B,OAAX,CAAD,CAAN,CAAkEb,OAAlE,CAA2E,aAAYkC,MAAM,CAACjC,KAAM,WAApG;AACAR,MAAAA,MAAM,CAAC8D,CAAC,CAACnD,QAAF,CAAW,EAAE,GAAGiD,cAAL;AAAqBxC,QAAAA,QAAQ,EAAE;AAA/B,OAAX,CAAD,CAAN,CAAiEb,OAAjE,CAA0E,aAAYkC,MAAM,CAACnB,IAAK,WAAlG;AACAtB,MAAAA,MAAM,CAAC8D,CAAC,CAACnD,QAAF,CAAW,EAAE,GAAGiD,cAAL;AAAqBxC,QAAAA,QAAQ,EAAE;AAA/B,OAAX,CAAD,CAAN,CAA8Db,OAA9D,CAAuE,qBAAvE;AACD,KAdG,CAAJ;AAgBAV,IAAAA,IAAI,CAAC,4BAAD,EAA+B,MAAM;AACvC,YAAMiE,CAAC,GAAG,IAAI/D,kBAAJ,CAAcE,MAAd,EAAsBwD,WAAtB,EAAmCE,OAAnC,EAA4C,IAA5C,CAAV;AACA,YAAMvB,IAAmB,GAAG;AAC1BnB,QAAAA,IAAI,EAAE,OADoB;AAE1BC,QAAAA,UAAU,EAAE,CAFc;AAG1BC,QAAAA,MAAM,EAAE;AAHkB,OAA5B;AAKA2C,MAAAA,CAAC,CAAC9C,OAAF,CAAUoB,IAAV,EAAgB,EAAhB,EAAoB,EAApB;AACA,YAAMK,MAAuB,GAAG;AAC9BnB,QAAAA,IAAI,EAAE,OADwB;AAE9BJ,QAAAA,UAAU,EAAE,CAFkB;AAG9BV,QAAAA,KAAK,EAAE,KAHuB;AAI9Be,QAAAA,QAAQ,EAAE;AAJoB,OAAhC;AAMAuC,MAAAA,CAAC,CAACzC,SAAF,CAAYoB,MAAZ,EAAoB,EAApB,EAAwB,EAAxB;AAEAzC,MAAAA,MAAM,CAAC8D,CAAC,CAACnD,QAAF,CAAW,EAAE,GAAGiD,cAAL;AAAqB7C,QAAAA,KAAK,EAAE,YAA5B;AAA0CK,QAAAA,QAAQ,EAAE;AAApD,OAAX,CAAD,CAAN,CAAuFb,OAAvF,CAA+FiD,GAA/F;AACAxD,MAAAA,MAAM,CAAC8D,CAAC,CAACnD,QAAF,CAAW,EAAE,GAAGiD,cAAL;AAAqB7C,QAAAA,KAAK,EAAE,WAA5B;AAAyCK,QAAAA,QAAQ,EAAE;AAAnD,OAAX,CAAD,CAAN,CAAsFb,OAAtF,CACG,aAAY6B,IAAI,CAACnB,IAAK,WADzB;AAGAjB,MAAAA,MAAM,CAAC8D,CAAC,CAACnD,QAAF,CAAW,EAAE,GAAGiD,cAAL;AAAqB7C,QAAAA,KAAK,EAAE,QAA5B;AAAsCK,QAAAA,QAAQ,EAAE;AAAhD,OAAX,CAAD,CAAN,CAAqFb,OAArF,CAA6FiD,GAA7F;AACAxD,MAAAA,MAAM,CAAC8D,CAAC,CAACnD,QAAF,CAAW,EAAE,GAAGiD,cAAL;AAAqB7C,QAAAA,KAAK,EAAE,QAA5B;AAAsCK,QAAAA,QAAQ,EAAE;AAAhD,OAAX,CAAD,CAAN,CAAmFb,OAAnF,CACG,aAAYkC,MAAM,CAACjC,KAAM,WAD5B;AAGAR,MAAAA,MAAM,CAAC8D,CAAC,CAACnD,QAAF,CAAW,EAAE,GAAGiD,cAAL;AAAqB7C,QAAAA,KAAK,EAAE,QAA5B;AAAsCK,QAAAA,QAAQ,EAAE;AAAhD,OAAX,CAAD,CAAN,CAAkFb,OAAlF,CACG,aAAYkC,MAAM,CAACnB,IAAK,WAD3B;AAGAtB,MAAAA,MAAM,CAAC8D,CAAC,CAACnD,QAAF,CAAW,EAAE,GAAGiD,cAAL;AAAqB7C,QAAAA,KAAK,EAAE,QAA5B;AAAsCK,QAAAA,QAAQ,EAAE;AAAhD,OAAX,CAAD,CAAN,CAA+Eb,OAA/E,CAAwF,qBAAxF;AACD,KA5BG,CAAJ;AA6BD,GAnFO,CAAR;AAqFAV,EAAAA,IAAI,CAAC,qBAAD,EAAwB,MAAM;AAChC,UAAM8D,OAAO,GAAGM,UAAU,CAAClF,GAAX,CAAeI,CAAC,IAAI,KAApB,CAAhB;AACA,UAAM2E,CAAC,GAAG,IAAI/D,kBAAJ,CAAckE,UAAd,EAA0BC,IAA1B,EAAgCP,OAAhC,EAAyC,IAAzC,CAAV;AACAG,IAAAA,CAAC,CAACrC,cAAF,CAAiB0C,WAAjB;AACAL,IAAAA,CAAC,CAACM,iBAAF,CAAoBhE,OAApB,CAA4B,CAACiE,MAAD,EAASC,GAAT,KAAiB;AAC3CtE,MAAAA,MAAM,CAACqE,MAAD,CAAN,CAAeE,WAAf,CAA2BC,kBAAkB,CAACF,GAAD,CAA7C,EAAoD,CAApD;AACD,KAFD;AAGD,GAPG,CAAJ;AAQD,CA3UO,CAAR,C,CA6UA;;AACA,MAAML,UAAU,GAAG,CAAC,GAAD,EAAM,MAAN,EAAc,IAAd,EAAoB,IAApB,EAA0B,OAA1B,CAAnB;AACA,MAAMC,IAAI,GAAG,CACX,CACE,kBADF,EAEE,kBAFF,EAGE,kBAHF,EAIE,CAAC,iBAJH,EAKE,iBALF,EAME,CAAC,kBANH,EAOE,CAAC,kBAPH,EAQE,iBARF,EASE,iBATF,EAUE,CAAC,iBAVH,EAWE,CAAC,iBAXH,EAYE,iBAZF,EAaE,CAAC,iBAbH,EAcE,CAAC,iBAdH,EAeE,CAAC,kBAfH,EAgBE,CAAC,kBAhBH,EAiBE,CAAC,iBAjBH,EAkBE,iBAlBF,EAmBE,CAAC,kBAnBH,EAoBE,CAAC,iBApBH,EAqBE,CAAC,kBArBH,EAsBE,gBAtBF,EAuBE,kBAvBF,EAwBE,CAAC,iBAxBH,EAyBE,kBAzBF,CADW,EA4BX,CACE,CAAC,mBADH,EAEE,CAAC,iBAFH,EAGE,mBAHF,EAIE,mBAJF,EAKE,iBALF,EAME,CAAC,kBANH,EAOE,CAAC,iBAPH,EAQE,iBARF,EASE,CAAC,iBATH,EAUE,kBAVF,EAWE,iBAXF,EAYE,kBAZF,EAaE,iBAbF,EAcE,CAAC,iBAdH,EAeE,CAAC,gBAfH,EAgBE,CAAC,iBAhBH,EAiBE,iBAjBF,EAkBE,CAAC,iBAlBH,EAmBE,CAAC,iBAnBH,EAoBE,CAAC,iBApBH,EAqBE,CAAC,oBArBH,EAsBE,gBAtBF,EAuBE,iBAvBF,EAwBE,kBAxBF,EAyBE,iBAzBF,CA5BW,EAuDX,CACE,iBADF,EAEE,CAAC,iBAFH,EAGE,CAAC,kBAHH,EAIE,kBAJF,EAKE,iBALF,EAME,iBANF,EAOE,CAAC,iBAPH,EAQE,iBARF,EASE,CAAC,kBATH,EAUE,gBAVF,EAWE,kBAXF,EAYE,kBAZF,EAaE,kBAbF,EAcE,iBAdF,EAeE,CAAC,kBAfH,EAgBE,CAAC,gBAhBH,EAiBE,kBAjBF,EAkBE,CAAC,kBAlBH,EAmBE,CAAC,kBAnBH,EAoBE,CAAC,iBApBH,EAqBE,mBArBF,EAsBE,gBAtBF,EAuBE,iBAvBF,EAwBE,kBAxBF,EAyBE,CAAC,mBAzBH,CAvDW,EAkFX,CACE,gBADF,EAEE,CAAC,iBAFH,EAGE,CAAC,oBAHH,EAIE,kBAJF,EAKE,iBALF,EAME,CAAC,kBANH,EAOE,CAAC,kBAPH,EAQE,kBARF,EASE,CAAC,kBATH,EAUE,CAAC,iBAVH,EAWE,iBAXF,EAYE,kBAZF,EAaE,CAAC,iBAbH,EAcE,CAAC,iBAdH,EAeE,CAAC,iBAfH,EAgBE,CAAC,kBAhBH,EAiBE,CAAC,kBAjBH,EAkBE,kBAlBF,EAmBE,CAAC,kBAnBH,EAoBE,CAAC,iBApBH,EAqBE,CAAC,gBArBH,EAsBE,kBAtBF,EAuBE,kBAvBF,EAwBE,kBAxBF,EAyBE,kBAzBF,CAlFW,EA6GX,CACE,gBADF,EAEE,CAAC,kBAFH,EAGE,iBAHF,EAIE,iBAJF,EAKE,mBALF,EAME,kBANF,EAOE,CAAC,iBAPH,EAQE,iBARF,EASE,kBATF,EAUE,iBAVF,EAWE,kBAXF,EAYE,kBAZF,EAaE,iBAbF,EAcE,CAAC,iBAdH,EAeE,CAAC,kBAfH,EAgBE,CAAC,iBAhBH,EAiBE,iBAjBF,EAkBE,CAAC,kBAlBH,EAmBE,kBAnBF,EAoBE,kBApBF,EAqBE,CAAC,kBArBH,EAsBE,CAAC,iBAtBH,EAuBE,kBAvBF,EAwBE,iBAxBF,EAyBE,iBAzBF,CA7GW,CAAb;AAyIA,MAAMM,kBAAkB,GAAG,CACzB,kBADyB,EAEzB,CAAC,mBAFwB,EAGzB,mBAHyB,EAIzB,CAAC,mBAJwB,EAKzB,mBALyB,EAMzB,CAAC,mBANwB,EAOzB,CAAC,mBAPwB,EAQzB,mBARyB,EASzB,CAAC,mBATwB,EAUzB,CAAC,oBAVwB,EAWzB,kBAXyB,EAYzB,kBAZyB,EAazB,CAAC,mBAbwB,EAczB,CAAC,kBAdwB,EAezB,CAAC,mBAfwB,EAgBzB,CAAC,mBAhBwB,EAiBzB,mBAjByB,EAkBzB,CAAC,qBAlBwB,EAmBzB,CAAC,mBAnBwB,EAoBzB,CAAC,mBApBwB,EAqBzB,CAAC,mBArBwB,EAsBzB,mBAtByB,EAuBzB,mBAvByB,EAwBzB,mBAxByB,EAyBzB,mBAzByB,CAA3B;AA4BA,MAAML,WAAW,GAAG;AAClB7D,EAAAA,CAAC,EAAE,kBADe;AAElBmE,EAAAA,IAAI,EAAE,mBAFY;AAGlBC,EAAAA,MAAM,EAAE,mBAHU;AAIlBC,EAAAA,SAAS,EAAE,mBAJO;AAKlBC,EAAAA,EAAE,EAAE,KALc;AAMlBC,EAAAA,UAAU,EAAE,mBANM;AAOlBC,EAAAA,OAAO,EAAE,kBAPS;AAQlBC,EAAAA,EAAE,EAAE,kBARc;AASlBC,EAAAA,WAAW,EAAE,mBATK;AAUlBC,EAAAA,UAAU,EAAE,mBAVM;AAWlBC,EAAAA,KAAK,EAAE,mBAXW;AAYlB5F,EAAAA,CAAC,EAAE,kBAZe;AAalB6F,EAAAA,OAAO,EAAE,mBAbS;AAclBC,EAAAA,EAAE,EAAE,mBAdc;AAelBC,EAAAA,SAAS,EAAE,mBAfO;AAgBlBC,EAAAA,IAAI,EAAE,mBAhBY;AAiBlBC,EAAAA,EAAE,EAAE,kBAjBc;AAkBlBC,EAAAA,GAAG,EAAE,mBAlBa;AAmBlBC,EAAAA,GAAG,EAAE,kBAnBa;AAoBlBC,EAAAA,OAAO,EAAE,mBApBS;AAqBlBC,EAAAA,EAAE,EAAE,mBArBc;AAsBlBC,EAAAA,IAAI,EAAE,kBAtBY;AAuBlBC,EAAAA,EAAE,EAAE,mBAvBc;AAwBlBC,EAAAA,EAAE,EAAE,mBAxBc;AAyBlBC,EAAAA,IAAI,EAAE,mBAzBY;AA0BlBC,EAAAA,EAAE,EAAE,kBA1Bc;AA2BlBC,EAAAA,OAAO,EAAE,mBA3BS;AA4BlBC,EAAAA,KAAK,EAAE,mBA5BW;AA6BlBC,EAAAA,IAAI,EAAE,mBA7BY;AA8BlBnD,EAAAA,GAAG,EAAE,kBA9Ba;AA+BlBoD,EAAAA,IAAI,EAAE,mBA/BY;AAgClBC,EAAAA,KAAK,EAAE,mBAhCW;AAiClBC,EAAAA,OAAO,EAAE,mBAjCS;AAkClBC,EAAAA,SAAS,EAAE,mBAlCO;AAmClBC,EAAAA,GAAG,EAAE,kBAnCa;AAoClBC,EAAAA,GAAG,EAAE,mBApCa;AAqClBC,EAAAA,MAAM,EAAE,mBArCU;AAsClBC,EAAAA,GAAG,EAAE,mBAtCa;AAuClBC,EAAAA,EAAE,EAAE,mBAvCc;AAwClBC,EAAAA,MAAM,EAAE,mBAxCU;AAyClBC,EAAAA,GAAG,EAAE,mBAzCa;AA0ClBC,EAAAA,SAAS,EAAE,mBA1CO;AA2ClBC,EAAAA,QAAQ,EAAE,mBA3CQ;AA4ClBC,EAAAA,GAAG,EAAE,mBA5Ca;AA6ClBC,EAAAA,aAAa,EAAE,mBA7CG;AA8ClBC,EAAAA,MAAM,EAAE,mBA9CU;AA+ClBC,EAAAA,KAAK,EAAE,mBA/CW;AAgDlBC,EAAAA,IAAI,EAAE,mBAhDY;AAiDlBC,EAAAA,UAAU,EAAE,mBAjDM;AAkDlBC,EAAAA,SAAS,EAAE,kBAlDO;AAmDlBC,EAAAA,GAAG,EAAE,KAnDa;AAoDlBC,EAAAA,QAAQ,EAAE,mBApDQ;AAqDlBC,EAAAA,YAAY,EAAE,mBArDI;AAsDlBC,EAAAA,IAAI,EAAE,IAtDY;AAuDlBC,EAAAA,MAAM,EAAE,mBAvDU;AAwDlBC,EAAAA,SAAS,EAAE,mBAxDO;AAyDlBC,EAAAA,EAAE,EAAE,kBAzDc;AA0DlBC,EAAAA,QAAQ,EAAE,mBA1DQ;AA2DlBC,EAAAA,GAAG,EAAE,mBA3Da;AA4DlBC,EAAAA,SAAS,EAAE,mBA5DO;AA6DlBC,EAAAA,IAAI,EAAE,mBA7DY;AA8DlBC,EAAAA,GAAG,EAAE,mBA9Da;AA+DlBC,EAAAA,MAAM,EAAE,mBA/DU;AAgElBC,EAAAA,IAAI,EAAE,IAhEY;AAiElBC,EAAAA,EAAE,EAAE,IAjEc;AAkElBC,EAAAA,IAAI,EAAE,mBAlEY;AAmElBC,EAAAA,IAAI,EAAE,mBAnEY;AAoElBC,EAAAA,IAAI,EAAE,mBApEY;AAqElBC,EAAAA,MAAM,EAAE,KArEU;AAsElBC,EAAAA,KAAK,EAAE,mBAtEW;AAuElBC,EAAAA,IAAI,EAAE,mBAvEY;AAwElBC,EAAAA,KAAK,EAAE,mBAxEW;AAyElBC,EAAAA,IAAI,EAAE,mBAzEY;AA0ElBC,EAAAA,EAAE,EAAE,mBA1Ec;AA2ElBC,EAAAA,OAAO,EAAE,IA3ES;AA4ElBC,EAAAA,QAAQ,EAAE,mBA5EQ;AA6ElBC,EAAAA,MAAM,EAAE,mBA7EU;AA8ElBC,EAAAA,GAAG,EAAE,mBA9Ea;AA+ElBC,EAAAA,KAAK,EAAE,mBA/EW;AAgFlBC,EAAAA,IAAI,EAAE,mBAhFY;AAiFlBC,EAAAA,SAAS,EAAE,mBAjFO;AAkFlBC,EAAAA,OAAO,EAAE,KAlFS;AAmFlBC,EAAAA,OAAO,EAAE,mBAnFS;AAoFlBC,EAAAA,IAAI,EAAE,mBApFY;AAqFlBC,EAAAA,QAAQ,EAAE,mBArFQ;AAsFlBC,EAAAA,GAAG,EAAE,IAtFa;AAuFlBC,EAAAA,OAAO,EAAE,IAvFS;AAwFlBC,EAAAA,KAAK,EAAE,mBAxFW;AAyFlBC,EAAAA,KAAK,EAAE,mBAzFW;AA0FlBC,EAAAA,QAAQ,EAAE,mBA1FQ;AA2FlBC,EAAAA,KAAK,EAAE,mBA3FW;AA4FlBC,EAAAA,GAAG,EAAE;AA5Fa,CAApB","sourceRoot":"/src/modules/nlu/src/backend","sourcesContent":["import _ from 'lodash'\n\nimport { SPACE, tokenizeLatinTextForTests } from '../tools/token-utils'\nimport { ExtractedEntity, ExtractedSlot } from '../typings'\n\nimport Utterance, { UtteranceToStringOptions } from './utterance'\n\nconst TOKENS = tokenizeLatinTextForTests('You might want to behave like if you are not like one of us , But you are !') // split punct by space to simplify tokenization\nconst VECTORS = TOKENS.map(() => Array.from({ length: 5 }, () => _.random(0, 1, true)))\nconst POS_TAGS = [\n  'PRON',\n  'VERB',\n  'VERB',\n  'PART',\n  'VERB',\n  'SCONJ',\n  'SCONJ',\n  'PRON',\n  'AUX',\n  'PART',\n  'SCONJ',\n  'NUM',\n  'ADP',\n  'PRON',\n  'PUNCT',\n  'CCONJ',\n  'PRON',\n  'AUX',\n  'PUNCT'\n]\n  .map(a => [a, '_'])\n  .reduce((tags, next) => tags.concat(next))\n  .slice(0, -1)\n\ndescribe('UtteranceClass', () => {\n  describe('tokens', () => {\n    test('Array is readonly', () => {\n      const utterance = new Utterance(TOKENS, VECTORS, POS_TAGS, 'en')\n      expect(() => (utterance.tokens = [])).toThrow()\n    })\n\n    test('Token object is readonly', () => {\n      const utterance = new Utterance(TOKENS, VECTORS, POS_TAGS, 'en')\n      expect(() => (utterance.tokens[0].index = 25)).toThrow()\n    })\n\n    test('tokens, vectors & tags are properly associated', () => {\n      const utterance = new Utterance(TOKENS, VECTORS, POS_TAGS, 'en')\n      utterance.tokens.forEach((tok, i) => {\n        expect(tok.index).toEqual(i)\n        expect(tok.value).toEqual(TOKENS[i])\n        expect(tok.vector).toEqual(VECTORS[i])\n        expect(tok.POS).toEqual(POS_TAGS[i])\n      })\n    })\n\n    test('different tokens and vectors length throws', () => {\n      expect(() => new Utterance(TOKENS.slice(0, -1), VECTORS, POS_TAGS, 'en')).toThrow()\n    })\n\n    test('toString', () => {\n      const utterance = new Utterance(TOKENS, VECTORS, POS_TAGS, 'en')\n\n      expect(utterance.tokens[0].toString()).toEqual('You')\n      expect(utterance.tokens[0].toString({ lowerCase: true })).toEqual('you')\n      expect(utterance.tokens[1].toString()).toEqual(' ')\n      expect(utterance.tokens[1].toString({ realSpaces: true })).toEqual(' ')\n      expect(utterance.tokens[1].toString({ realSpaces: false })).toEqual(SPACE)\n    })\n\n    test('slots', () => {\n      const utterance = new Utterance(TOKENS, VECTORS, POS_TAGS, 'en')\n\n      expect(utterance.tokens[0].slots).toEqual([])\n      utterance.tagSlot({ name: 'person', confidence: 0.45, source: 'anything' }, 0, 3)\n\n      expect(utterance.tokens[0].slots.length).toEqual(1)\n      expect(utterance.tokens[1].slots.length).toEqual(0)\n      expect(utterance.tokens[2].slots.length).toEqual(0)\n    })\n\n    test('entities', () => {\n      const utterance = new Utterance(TOKENS, VECTORS, POS_TAGS, 'en')\n      expect(utterance.tokens[0].entities).toEqual([])\n      expect(utterance.tokens[3].entities).toEqual([])\n      utterance.tagEntity({ type: 'car', confidence: 0.45, value: 'mercedes', metadata: {} }, 5, 10)\n\n      expect(utterance.tokens[0].entities.length).toEqual(0)\n      expect(utterance.tokens[1].entities.length).toEqual(0)\n      expect(utterance.tokens[2].entities.length).toEqual(0)\n      expect(utterance.tokens[3].entities.length).toEqual(1)\n    })\n\n    test('tfidf', () => {\n      const utterance = new Utterance(TOKENS, VECTORS, POS_TAGS, 'en')\n\n      expect(utterance.tokens[0].tfidf).toEqual(1)\n      const tfidf = {\n        [TOKENS[0]]: 0.245\n      }\n\n      utterance.setGlobalTfidf(tfidf)\n      expect(utterance.tokens[0].tfidf).toEqual(0.245)\n      expect(utterance.tokens[3].tfidf).toEqual(1)\n    })\n\n    test('kmeans', () => {\n      const utterance = new Utterance(TOKENS, VECTORS, POS_TAGS, 'en')\n\n      expect(utterance.tokens[0].cluster).toEqual(1)\n      const mockedKmeans = {\n        nearest: jest\n          .fn()\n          .mockReturnValueOnce([4])\n          .mockReturnValue([2])\n      }\n\n      utterance.setKmeans(mockedKmeans)\n      expect(utterance.tokens[0].cluster).toEqual(4)\n      expect(mockedKmeans.nearest.mock.calls[0][0][0]).toEqual(VECTORS[0])\n      expect(utterance.tokens[3].cluster).toEqual(2)\n      expect(mockedKmeans.nearest.mock.calls[1][0][0]).toEqual(VECTORS[3])\n    })\n  })\n\n  describe('slots', () => {\n    const slot: ExtractedSlot = {\n      name: 'person',\n      confidence: 1,\n      source: 'a source'\n    }\n\n    test('tagSlots out of range', () => {\n      const utterance = new Utterance(TOKENS, VECTORS, POS_TAGS, 'en')\n      expect(() => utterance.tagSlot(slot, 500, 800)).toThrow()\n      expect(utterance.slots).toEqual([])\n    })\n\n    test('tagSlots single token', () => {\n      const utterance = new Utterance(TOKENS, VECTORS, POS_TAGS, 'en')\n      utterance.tagSlot(slot, 0, 3)\n      expect(utterance.slots[0].startPos).toEqual(0)\n      expect(utterance.slots[0].startTokenIdx).toEqual(0)\n      expect(utterance.slots[0].endPos).toEqual(3)\n      expect(utterance.slots[0].endTokenIdx).toEqual(0)\n    })\n\n    test('tagSlots multiple tokens', () => {\n      const utterance = new Utterance(TOKENS, VECTORS, POS_TAGS, 'en')\n      utterance.tagSlot(slot, 3, 9)\n\n      expect(utterance.slots[0].startPos).toEqual(3)\n      expect(utterance.slots[0].startTokenIdx).toEqual(1)\n      expect(utterance.slots[0].endPos).toEqual(9)\n      expect(utterance.slots[0].endTokenIdx).toEqual(2)\n      expect(utterance.tokens[1].slots.length).toEqual(1)\n      expect(utterance.tokens[1].slots[0].name).toEqual(slot.name)\n      expect(utterance.tokens[1].slots[0].source).toEqual(slot.source)\n      expect(utterance.tokens[1].slots[0].confidence).toEqual(slot.confidence)\n      expect(utterance.tokens[2].slots.length).toEqual(1)\n      expect(utterance.tokens[2].slots[0].name).toEqual(slot.name)\n      expect(utterance.tokens[2].slots[0].source).toEqual(slot.source)\n      expect(utterance.tokens[2].slots[0].confidence).toEqual(slot.confidence)\n      expect(utterance.tokens[3].slots.length).toEqual(0)\n    })\n  })\n\n  describe('Entities', () => {\n    const entity: ExtractedEntity = {\n      type: 'number',\n      confidence: 1,\n      value: 'one',\n      metadata: {\n        value: 1\n      }\n    }\n\n    test('tagEntity out of range', () => {\n      const utterance = new Utterance(TOKENS, VECTORS, POS_TAGS, 'en')\n      expect(() => utterance.tagEntity(entity, 500, 1300)).toThrow()\n    })\n\n    test('tagEntity single token', () => {\n      const utterance = new Utterance(TOKENS, VECTORS, POS_TAGS, 'en')\n      utterance.tagEntity(entity, 0, 3)\n      expect(utterance.entities.length).toEqual(1)\n      Object.entries(entity).forEach(([key, value]) => {\n        expect(utterance.entities[0][key]).toEqual(value)\n      })\n      expect(utterance.entities[0].startPos).toEqual(0)\n      expect(utterance.entities[0].startTokenIdx).toEqual(0)\n      expect(utterance.entities[0].endPos).toEqual(3)\n      expect(utterance.entities[0].endTokenIdx).toEqual(0)\n    })\n\n    test('tagEntity multiple tokens', () => {\n      const utterance = new Utterance(TOKENS, VECTORS, POS_TAGS, 'en')\n      utterance.tagEntity(entity, 3, 9)\n\n      expect(utterance.entities[0].startPos).toEqual(3)\n      expect(utterance.entities[0].startTokenIdx).toEqual(1)\n      expect(utterance.entities[0].endPos).toEqual(9)\n      expect(utterance.entities[0].endTokenIdx).toEqual(2)\n      expect(utterance.tokens[1].entities.length).toEqual(1)\n      Object.entries(entity).forEach(([key, value]) => {\n        expect(utterance.tokens[1].entities[0][key]).toEqual(value)\n      })\n      expect(utterance.tokens[2].entities.length).toEqual(1)\n      Object.entries(entity).forEach(([key, value]) => {\n        expect(utterance.tokens[2].entities[0][key]).toEqual(value)\n      })\n      expect(utterance.tokens[3].entities.length).toEqual(0)\n    })\n  })\n\n  describe('clone', () => {\n    const utterance = new Utterance(TOKENS, VECTORS, POS_TAGS, 'en')\n    const tfidf = TOKENS.reduce((tfidf, tok) => {\n      if (!tfidf[tok]) {\n        tfidf[tok] = Math.random()\n      }\n      return tfidf\n    }, {})\n    utterance.setGlobalTfidf(tfidf)\n    utterance.tagSlot({ name: 'slot', confidence: 1, source: 'hey' }, 2, 15)\n    utterance.tagEntity({ type: 'dist', value: 'entity', confidence: 1, metadata: {} }, 22, 28)\n\n    test('clone only', () => {\n      const u2 = utterance.clone(false, false)\n\n      expect(u2).not.toBe(utterance)\n      expect(u2.slots).toEqual([])\n      expect(u2.entities).toEqual([])\n      _.zip(utterance.tokens, u2.tokens).forEach(([t1, t2]) => {\n        Object.entries(_.omit(t1, 'slots', 'entities', 'toString')).forEach(([k, v]) => expect(v).toEqual(t2[k]))\n      })\n    })\n\n    test('with entities', () => {\n      const u2 = utterance.clone(true, false)\n\n      expect(u2).not.toBe(utterance)\n      expect(u2.entities).toEqual(utterance.entities)\n      expect(u2.slots).toEqual([])\n      _.zip(utterance.tokens, u2.tokens).forEach(([t1, t2]) => {\n        Object.entries(_.omit(t1, 'slots', 'toString')).forEach(([k, v]) => expect(v).toEqual(t2[k]))\n      })\n    })\n\n    test('with slots', () => {\n      const u2 = utterance.clone(false, true)\n\n      expect(u2).not.toBe(utterance)\n      expect(u2.entities).toEqual([])\n      expect(u2.slots).toEqual(utterance.slots)\n      _.zip(utterance.tokens, u2.tokens).forEach(([t1, t2]) => {\n        Object.entries(_.omit(t1, 'entities', 'toString')).forEach(([k, v]) => expect(v).toEqual(t2[k]))\n      })\n    })\n\n    test('with entities and slots', () => {\n      const u2 = utterance.clone(true, true)\n\n      expect(u2).not.toBe(utterance)\n      expect(u2.entities).toEqual(utterance.entities)\n      expect(u2.slots).toEqual(utterance.slots)\n      _.zip(utterance.tokens, u2.tokens).forEach(([t1, t2]) => {\n        Object.entries(_.omit(t1, 'toString')).forEach(([k, v]) => expect(v).toEqual(t2[k]))\n      })\n    })\n  })\n\n  describe('toString', () => {\n    const str = 'This IS a SUPerTest withFire'\n    //           0123456789012345678901234567\n    const tokens = tokenizeLatinTextForTests(str)\n    const fakeVectors = tokens.map(t => [])\n    const fakePOS = tokens.map(t => 'POS')\n    const defaultOptions = {\n      entities: 'keep-default',\n      slots: 'keep-value',\n      onlyWords: false,\n      lowerCase: false\n    } as UtteranceToStringOptions\n\n    test('format options', () => {\n      const u = new Utterance(tokens, fakeVectors, fakePOS, 'en')\n\n      expect(u.toString(defaultOptions)).toEqual(str)\n      expect(u.toString({ ...defaultOptions, lowerCase: true })).toEqual(str.toLowerCase())\n      expect(u.toString({ ...defaultOptions, onlyWords: true })).toEqual(str.replace(/\\s/g, ''))\n      expect(u.toString({ ...defaultOptions, onlyWords: true, lowerCase: true })).toEqual(\n        str.replace(/\\s/g, '').toLowerCase()\n      )\n    })\n\n    test('slot options', () => {\n      const u = new Utterance(tokens, fakeVectors, fakePOS, 'en')\n      const slot: ExtractedSlot = {\n        name: 'Tiger',\n        confidence: 1,\n        source: 'supertest'\n      }\n      u.tagSlot(slot, 10, 19)\n\n      expect(u.toString(defaultOptions)).toEqual(str)\n      expect(u.toString({ ...defaultOptions, slots: 'keep-name' })).toEqual(`This IS a ${slot.name} withFire`)\n      expect(u.toString({ ...defaultOptions, slots: 'ignore' })).toEqual(`This IS a  withFire`)\n    })\n\n    test('entities options', () => {\n      const u = new Utterance(tokens, fakeVectors, fakePOS, 'en')\n      const entity: ExtractedEntity = {\n        type: 'Woods',\n        confidence: 1,\n        value: '123',\n        metadata: {}\n      }\n      u.tagEntity(entity, 10, 19)\n\n      expect(u.toString(defaultOptions)).toEqual(str)\n      expect(u.toString({ ...defaultOptions, entities: 'keep-value' })).toEqual(`This IS a ${entity.value} withFire`)\n      expect(u.toString({ ...defaultOptions, entities: 'keep-name' })).toEqual(`This IS a ${entity.type} withFire`)\n      expect(u.toString({ ...defaultOptions, entities: 'ignore' })).toEqual(`This IS a  withFire`)\n    })\n\n    test('entities and slots options', () => {\n      const u = new Utterance(tokens, fakeVectors, fakePOS, 'en')\n      const slot: ExtractedSlot = {\n        name: 'Tiger',\n        confidence: 1,\n        source: 'supertest'\n      }\n      u.tagSlot(slot, 10, 19)\n      const entity: ExtractedEntity = {\n        type: 'Woods',\n        confidence: 1,\n        value: '123',\n        metadata: {}\n      }\n      u.tagEntity(entity, 10, 19)\n\n      expect(u.toString({ ...defaultOptions, slots: 'keep-value', entities: 'keep-value' })).toEqual(str)\n      expect(u.toString({ ...defaultOptions, slots: 'keep-name', entities: 'keep-value' })).toEqual(\n        `This IS a ${slot.name} withFire`\n      )\n      expect(u.toString({ ...defaultOptions, slots: 'ignore', entities: 'keep-default' })).toEqual(str)\n      expect(u.toString({ ...defaultOptions, slots: 'ignore', entities: 'keep-value' })).toEqual(\n        `This IS a ${entity.value} withFire`\n      )\n      expect(u.toString({ ...defaultOptions, slots: 'ignore', entities: 'keep-name' })).toEqual(\n        `This IS a ${entity.type} withFire`\n      )\n      expect(u.toString({ ...defaultOptions, slots: 'ignore', entities: 'ignore' })).toEqual(`This IS a  withFire`)\n    })\n  })\n\n  test('sentence embeddeing', () => {\n    const fakePOS = testTokens.map(_ => 'POS')\n    const u = new Utterance(testTokens, vecs, fakePOS, 'en')\n    u.setGlobalTfidf(globalTFIDF)\n    u.sentenceEmbedding.forEach((actual, idx) => {\n      expect(actual).toBeCloseTo(expectedEmbeddings[idx], 3)\n    })\n  })\n})\n\n// Sentence embedding test data\nconst testTokens = ['i', 'have', 'an', 'it', 'issue']\nconst vecs = [\n  [\n    20.874107360839844,\n    13.226028442382812,\n    40.754878997802734,\n    -32.03583526611328,\n    9.544014930725098,\n    -18.946258544921875,\n    -32.077903747558594,\n    25.72711944580078,\n    6.000054836273193,\n    -9.980449676513672,\n    -4.807291030883789,\n    34.21776580810547,\n    -39.83692169189453,\n    -41.74205780029297,\n    -32.027469635009766,\n    -3.2300822734832764,\n    -8.309528350830078,\n    17.37891387939453,\n    -25.159915924072266,\n    -9.755718231201172,\n    -21.471263885498047,\n    38.0972900390625,\n    19.229228973388672,\n    -17.59087371826172,\n    13.534223556518555\n  ],\n  [\n    -0.24725811183452606,\n    -10.69975471496582,\n    0.11991189420223236,\n    0.15629084408283234,\n    9.468283653259277,\n    -2.0219221115112305,\n    -5.423296928405762,\n    7.656525611877441,\n    -6.705521583557129,\n    1.5514013767242432,\n    4.234777927398682,\n    3.0641133785247803,\n    3.788898229598999,\n    -4.689056396484375,\n    -2.73398756980896,\n    -8.867668151855469,\n    7.824917316436768,\n    -4.574779510498047,\n    -9.939950942993164,\n    -6.021678924560547,\n    -0.011077036149799824,\n    4.60534143447876,\n    4.380100250244141,\n    0.2817268669605255,\n    0.825263500213623\n  ],\n  [\n    6.503832817077637,\n    -9.005444526672363,\n    -3.8556323051452637,\n    2.3468151092529297,\n    2.656834602355957,\n    6.978713512420654,\n    -5.068508625030518,\n    6.288288116455078,\n    -13.324929237365723,\n    2.51578950881958,\n    2.6000137329101562,\n    14.219351768493652,\n    5.4554643630981445,\n    5.286128044128418,\n    -3.8965466022491455,\n    -6.05485200881958,\n    11.869226455688477,\n    -11.307221412658691,\n    -1.5087023973464966,\n    -8.646753311157227,\n    0.44821596145629883,\n    8.66211986541748,\n    8.303625106811523,\n    13.985923767089844,\n    -0.19615978002548218\n  ],\n  [\n    4.50189208984375,\n    -4.935824394226074,\n    -0.042005181312561035,\n    2.3175597190856934,\n    4.412976264953613,\n    -13.736227035522461,\n    -13.990167617797852,\n    19.076614379882812,\n    -3.8637607097625732,\n    -2.875369071960449,\n    9.681108474731445,\n    14.190940856933594,\n    -6.300146102905273,\n    -2.748384475708008,\n    -10.67545223236084,\n    -15.081766128540039,\n    -3.3130884170532227,\n    1.7095024585723877,\n    -10.340690612792969,\n    -2.966965675354004,\n    -3.59036922454834,\n    13.048643112182617,\n    10.338794708251953,\n    12.132885932922363,\n    12.364285469055176\n  ],\n  [\n    4.14584493637085,\n    -2.2263107299804688,\n    3.047293186187744,\n    3.635033130645752,\n    0.31205978989601135,\n    1.8614319562911987,\n    -9.546428680419922,\n    5.078840732574463,\n    0.3299643397331238,\n    2.897230625152588,\n    1.3299314975738525,\n    0.7351471185684204,\n    5.249790191650391,\n    -3.529052495956421,\n    -3.4212493896484375,\n    -5.099746227264404,\n    8.956042289733887,\n    -2.9340271949768066,\n    0.8110866546630859,\n    2.8502562046051025,\n    -4.7403388023376465,\n    -4.358865261077881,\n    2.9119772911071777,\n    7.022226810455322,\n    2.365488290786743\n  ]\n]\nconst expectedEmbeddings = [\n  0.1341326675190514,\n  -0.06254902975677054,\n  0.16151883689646443,\n  -0.09876129247260174,\n  0.11536730381631702,\n  -0.09501117502566522,\n  -0.25369285613049697,\n  0.24317262203117693,\n  -0.07165771082652404,\n  -0.019598536174092393,\n  0.0469875331544465,\n  0.2491950533824863,\n  -0.11707818403666244,\n  -0.1961129818560888,\n  -0.20147780442964816,\n  -0.14759219473910062,\n  0.07769623209882123,\n  -0.0029155425803427614,\n  -0.18939382527025744,\n  -0.10210364508880357,\n  -0.11266725049833885,\n  0.23113461596466228,\n  0.17243578054811445,\n  0.04260804160159498,\n  0.10276822801312079\n]\n\nconst globalTFIDF = {\n  i: 1.1983333333333335,\n  need: 0.39333333333333337,\n  advice: 0.16333333333333333,\n  regarding: 0.20166666666666666,\n  my: 1.045,\n  statements: 0.16333333333333333,\n  invoice: 0.2783333333333333,\n  is: 0.6616666666666667,\n  incorrectly: 0.16333333333333333,\n  calculated: 0.16333333333333333,\n  there: 0.20166666666666666,\n  a: 0.4316666666666667,\n  mistake: 0.16333333333333333,\n  on: 0.31666666666666665,\n  statement: 0.31666666666666665,\n  want: 0.31666666666666665,\n  to: 0.6233333333333333,\n  see: 0.16333333333333333,\n  the: 0.2783333333333333,\n  details: 0.16333333333333333,\n  of: 0.16333333333333333,\n  what: 0.4316666666666667,\n  do: 0.20166666666666666,\n  if: 0.20166666666666666,\n  have: 0.31666666666666665,\n  an: 0.2783333333333333,\n  inquiry: 0.16333333333333333,\n  about: 0.20166666666666666,\n  does: 0.16333333333333333,\n  not: 0.2783333333333333,\n  make: 0.16333333333333333,\n  sense: 0.16333333333333333,\n  monthly: 0.16333333333333333,\n  incorrect: 0.16333333333333333,\n  how: 0.2783333333333333,\n  can: 0.39333333333333337,\n  figure: 0.16333333333333333,\n  out: 0.16333333333333333,\n  im: 0.16333333333333333,\n  paying: 0.16333333333333333,\n  for: 0.20166666666666666,\n  questions: 0.16333333333333333,\n  invoices: 0.16333333333333333,\n  get: 0.20166666666666666,\n  clarification: 0.16333333333333333,\n  charge: 0.16333333333333333,\n  wrong: 0.20166666666666666,\n  dont: 0.16333333333333333,\n  understand: 0.16333333333333333,\n  something: 0.2783333333333333,\n  end: 0.355,\n  contract: 0.47000000000000003,\n  subscription: 0.20166666666666666,\n  stop: 0.24,\n  cancel: 0.20166666666666666,\n  terminate: 0.16333333333333333,\n  it: 0.2783333333333333,\n  possible: 0.16333333333333333,\n  now: 0.16333333333333333,\n  agreement: 0.16333333333333333,\n  with: 0.16333333333333333,\n  you: 0.31666666666666665,\n  please: 0.20166666666666666,\n  give: 0.24,\n  me: 0.24,\n  your: 0.39333333333333337,\n  help: 0.16333333333333333,\n  line: 0.16333333333333333,\n  number: 0.585,\n  phone: 0.20166666666666666,\n  best: 0.16333333333333333,\n  reach: 0.20166666666666666,\n  call: 0.16333333333333333,\n  in: 0.16333333333333333,\n  contact: 0.24,\n  business: 0.16333333333333333,\n  should: 0.16333333333333333,\n  use: 0.16333333333333333,\n  seems: 0.16333333333333333,\n  like: 0.16333333333333333,\n  technical: 0.31666666666666665,\n  problem: 0.355,\n  support: 0.16333333333333333,\n  cant: 0.16333333333333333,\n  continue: 0.16333333333333333,\n  got: 0.24,\n  working: 0.24,\n  right: 0.20166666666666666,\n  error: 0.16333333333333333,\n  computer: 0.20166666666666666,\n  issue: 0.16333333333333333,\n  ive: 0.16333333333333333\n}\n"]}