{"version":3,"sources":["slots/slot-featurizer.test.ts"],"names":["describe","test","feats","name","value","boost","expect","featurizer","featToCRFsuiteAttr","toEqual","features","features1","featPairs","getFeatPairs","length","token","getWordWeight","tfidf","cluster","feat","getClusterFeat","tokens","isWord","entities","slots","SPACE","map","tok","Object","defineProperty","jest","fn","mockReturnValue","getWordFeat","feat1","feat10","feat11","feat2","feat3","feat4","feat5","feat6","feat7","feat8","feat9","toBeUndefined","toString","not","toBeCalled","enumerable","anIntent","vocab","fly","getInVocabFeat","toBeTruthy","toBeFalsy","allowedEntities","type","token1","token2","token3","feats0","getEntitiesFeats","feats1","feats2","feats3","feats4","feats5","getIntentFeature","anUtterance","getTokenQuartile","index"],"mappings":"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","sourceRoot":"/src/modules/nlu/src/backend","sourcesContent":["import { SPACE } from '../tools/token-utils'\nimport { UtteranceToken } from '../utterance/utterance'\n\nimport * as featurizer from './slot-featurizer'\n\ndescribe('CRF Featurizer 2', () => {\n  test('featToCRFsuiteAttr', () => {\n    const feats = [\n      {\n        name: 'feat',\n        value: 1\n      },\n      {\n        name: 'feat0',\n        value: false,\n        boost: 1000\n      }\n    ] as featurizer.CRFFeature[]\n\n    expect(featurizer.featToCRFsuiteAttr('pref', feats[0])).toEqual('preffeat=1:1')\n    expect(featurizer.featToCRFsuiteAttr('else', feats[1])).toEqual('elsefeat0=false:1000')\n  })\n\n  test('getFeaturesPairs', () => {\n    const features = [\n      { name: 'name', value: 2 },\n      { name: 'otherfeat', value: false, boost: 5 },\n      { name: 'diff', value: 'nothing' }\n    ] as featurizer.CRFFeature[]\n    const features1 = [\n      { name: 'name', value: 3 },\n      { name: 'otherfeat', value: true, boost: 2 },\n      { name: 'feat', value: 'nothing' }\n    ] as featurizer.CRFFeature[]\n\n    const featPairs = featurizer.getFeatPairs(features, features1, ['name', 'otherfeat', 'feat', 'wrongFeat'])\n\n    expect(featPairs.length).toEqual(3)\n\n    expect(featPairs[0].name).toEqual('name')\n    expect(featPairs[0].value).toEqual('2|3')\n    expect(featPairs[0].boost).toEqual(1)\n\n    expect(featPairs[1].name).toEqual('otherfeat')\n    expect(featPairs[1].value).toEqual('false|true')\n    expect(featPairs[1].boost).toEqual(5)\n\n    expect(featPairs[2].name).toEqual('feat')\n    expect(featPairs[2].value).toEqual('null|nothing')\n    expect(featPairs[2].boost).toEqual(1)\n  })\n\n  test('getWordWeight', () => {\n    const token = { value: 'a token' } as UtteranceToken\n\n    expect(featurizer.getWordWeight({ ...token, tfidf: 0 }).value).toEqual('low')\n    expect(featurizer.getWordWeight({ ...token, tfidf: 0.1 }).value).toEqual('low')\n    expect(featurizer.getWordWeight({ ...token, tfidf: 0.5 }).value).toEqual('low')\n    expect(featurizer.getWordWeight({ ...token, tfidf: 0.51 }).value).toEqual('low')\n    expect(featurizer.getWordWeight({ ...token, tfidf: 0.99 }).value).toEqual('low')\n    expect(featurizer.getWordWeight({ ...token, tfidf: 1 }).value).toEqual('low')\n    expect(featurizer.getWordWeight({ ...token, tfidf: 1.1 }).value).toEqual('medium')\n    expect(featurizer.getWordWeight({ ...token, tfidf: 1.49 }).value).toEqual('medium')\n    expect(featurizer.getWordWeight({ ...token, tfidf: 1.5 }).value).toEqual('medium')\n    expect(featurizer.getWordWeight({ ...token, tfidf: 1.51 }).value).toEqual('high')\n    expect(featurizer.getWordWeight({ ...token, tfidf: 1.99 }).value).toEqual('high')\n    expect(featurizer.getWordWeight({ ...token, tfidf: 2 }).value).toEqual('high')\n    expect(featurizer.getWordWeight({ ...token, tfidf: 2.1 }).value).toEqual('high')\n    expect(featurizer.getWordWeight({ ...token, tfidf: 10 }).value).toEqual('high')\n  })\n\n  test('getClusterFeat', async () => {\n    const cluster = 4\n    const token = { value: 'atok', cluster } as UtteranceToken\n\n    const feat = featurizer.getClusterFeat(token)\n\n    expect(feat.name).toEqual('cluster')\n    expect(feat.value).toEqual(cluster)\n  })\n\n  test('getWordFeat', () => {\n    const tokens = [\n      { value: 'i', isWord: true, entities: ['hello'] },\n      { value: 'i', isWord: true, slots: ['hello'] },\n      { value: 'i', isWord: true },\n      { value: SPACE, isWord: false, slots: ['hello'] },\n      { value: SPACE, isWord: false, entities: ['hello'] },\n      { value: SPACE, isWord: false }\n    ].map(tok => Object.defineProperty(tok, 'toString', { value: jest.fn().mockReturnValue(tok.value) }))\n\n    const feat = featurizer.getWordFeat(tokens[0], true)\n    const feat1 = featurizer.getWordFeat(tokens[0], false)\n    const feat10 = featurizer.getWordFeat(tokens[1], true)\n    const feat11 = featurizer.getWordFeat(tokens[1], false)\n    const feat2 = featurizer.getWordFeat(tokens[2], true)\n    const feat3 = featurizer.getWordFeat(tokens[2], false)\n    const feat4 = featurizer.getWordFeat(tokens[3], true)\n    const feat5 = featurizer.getWordFeat(tokens[3], false)\n    const feat6 = featurizer.getWordFeat(tokens[4], true)\n    const feat7 = featurizer.getWordFeat(tokens[4], false)\n    const feat8 = featurizer.getWordFeat(tokens[5], true)\n    const feat9 = featurizer.getWordFeat(tokens[5], false)\n\n    expect(feat).toBeUndefined()\n    expect(feat1).toBeUndefined()\n    expect(tokens[0].toString).not.toBeCalled()\n    expect(tokens[1].toString).toBeCalled()\n\n    expect(feat2.value).toEqual('i')\n    expect(feat2.boost).toEqual(3)\n    expect(feat10.value).toEqual('i')\n    expect(feat10.boost).toEqual(3)\n    expect(feat11.value).toEqual('i')\n    expect(feat11.boost).toEqual(1)\n    expect(feat3.value).toEqual('i')\n    expect(feat3.boost).toEqual(1)\n    expect(tokens[2].toString).toBeCalled()\n\n    expect(feat4).toBeUndefined()\n    expect(feat5).toBeUndefined()\n    expect(tokens[3].toString).not.toBeCalled()\n\n    expect(feat6).toBeUndefined()\n    expect(feat7).toBeUndefined()\n    expect(tokens[4].toString).not.toBeCalled()\n\n    expect(feat8).toBeUndefined()\n    expect(feat9).toBeUndefined()\n    expect(tokens[5].toString).not.toBeCalled()\n  })\n\n  test('getInVocabFeat', () => {\n    const tokens = [{ value: 'fly' }, { value: SPACE }, { value: 'paul' }].map(tok =>\n      Object.defineProperty(tok, 'toString', { value: () => tok.value, enumerable: true })\n    )\n\n    const anIntent = {\n      name: 'find flight',\n      vocab: {\n        fly: true\n      }\n    }\n\n    expect(featurizer.getInVocabFeat({ ...tokens[0], slots: ['lol.A.W'] }, anIntent).value).toBeTruthy()\n    expect(featurizer.getInVocabFeat(tokens[0], anIntent).value).toBeTruthy()\n    expect(featurizer.getInVocabFeat({ ...tokens[1], slots: ['lol.A.W'] }, anIntent).value).toBeFalsy()\n    expect(featurizer.getInVocabFeat(tokens[1], anIntent).value).toBeFalsy()\n    expect(featurizer.getInVocabFeat({ ...tokens[2], slots: ['lol.A.W'] }, anIntent).value).toBeFalsy()\n    expect(featurizer.getInVocabFeat(tokens[2], anIntent).value).toBeFalsy()\n  })\n\n  test('getEntitiesFeats', () => {\n    const allowedEntities = ['person', 'number', 'fruit']\n    const token = { entities: [{ type: 'person' }] }\n    const token1 = { entities: ['animal'] }\n    const token2 = { entities: [] }\n    const token3 = { entities: [{ type: 'fruit' }, { type: 'person' }] }\n\n    const feats0 = featurizer.getEntitiesFeats(token, allowedEntities, true)\n    const feats1 = featurizer.getEntitiesFeats(token, allowedEntities, false)\n    const feats2 = featurizer.getEntitiesFeats(token, [], false)\n    const feats3 = featurizer.getEntitiesFeats(token1, allowedEntities, false)\n    const feats4 = featurizer.getEntitiesFeats(token2, allowedEntities, false)\n    const feats5 = featurizer.getEntitiesFeats(token3, allowedEntities, false)\n\n    expect(feats0.length).toEqual(1)\n    expect(feats0[0].value).toEqual('person')\n    expect(feats0[0].boost).toEqual(3)\n    expect(feats1.length).toEqual(1)\n    expect(feats1[0].value).toEqual('person')\n    expect(feats1[0].boost).toEqual(1)\n    expect(feats2.length).toEqual(1)\n    expect(feats2[0].value).toEqual('none')\n    expect(feats2[0].boost).toEqual(1)\n    expect(feats3.length).toEqual(1)\n    expect(feats3[0].value).toEqual('none')\n    expect(feats3[0].boost).toEqual(1)\n    expect(feats4.length).toEqual(1)\n    expect(feats4[0].value).toEqual('none')\n    expect(feats4[0].boost).toEqual(1)\n    expect(feats5.length).toEqual(2)\n    expect(feats5[0].value).toEqual('fruit')\n    expect(feats5[0].boost).toEqual(1)\n    expect(feats5[1].value).toEqual('person')\n    expect(feats5[1].boost).toEqual(1)\n  })\n\n  test('getIntentFeature', () => {\n    const anIntent = {\n      name: 'give-me-money'\n    }\n    const feat = featurizer.getIntentFeature(anIntent)\n\n    expect(feat.value).toEqual(anIntent.name)\n    expect(feat.boost).toEqual(100)\n  })\n\n  test('getTokenQuartile', () => {\n    const anUtterance = {\n      tokens: ['a', 'b', 'c', 'd']\n    }\n    // here\n    expect(featurizer.getTokenQuartile(anUtterance, { index: 0 }).value).toEqual(1)\n    expect(featurizer.getTokenQuartile(anUtterance, { index: 1 }).value).toEqual(2)\n    expect(featurizer.getTokenQuartile(anUtterance, { index: 2 }).value).toEqual(3)\n    expect(featurizer.getTokenQuartile(anUtterance, { index: 3 }).value).toEqual(4)\n  })\n})\n"]}