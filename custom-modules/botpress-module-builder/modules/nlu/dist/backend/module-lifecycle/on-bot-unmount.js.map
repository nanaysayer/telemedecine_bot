{"version":3,"sources":["module-lifecycle/on-bot-unmount.ts"],"names":["getOnBotUnmount","state","bp","botId","nluByBot","activeTrainSession","_","chain","get","values","filter","trainSession","status","value","Promise","map","ts","broadcastCancelTraining","language","trainWatcher","remove"],"mappings":";;;;;;;AACA;;AAEA;;;;AAGO,SAASA,eAAT,CAAyBC,KAAzB,EAA0C;AAC/C,SAAO,OAAOC,EAAP,EAAuBC,KAAvB,KAAyC;AAC9C,QAAI,CAACF,KAAK,CAACG,QAAN,CAAeD,KAAf,CAAL,EAA4B;AAC1B;AACD;;AAED,UAAME,kBAAqC,GAAGC,gBAAEC,KAAF,CAAQD,gBAAEE,GAAF,CAAMP,KAAK,CAACG,QAAN,CAAeD,KAAf,CAAN,EAA6B,eAA7B,EAA8C,EAA9C,CAAR,EAC3CM,MAD2C,GAE3CC,MAF2C,CAEnCC,YAAD,IAAmCA,YAAY,CAACC,MAAb,KAAwB,UAFvB,EAG3CC,KAH2C,EAA9C;;AAKA,UAAMC,OAAO,CAACC,GAAR,CAAYV,kBAAZ,EAAgC,MAAMW,EAAN,IAAY;AAChD,YAAMf,KAAK,CAACgB,uBAAN,CAA8Bd,KAA9B,EAAqCa,EAAE,CAACE,QAAxC,CAAN;AACA,YAAM,gDAAsBhB,EAAtB,EAA0BC,KAA1B,EAAiCa,EAAjC,CAAN;AACD,KAHK,CAAN;AAKAf,IAAAA,KAAK,CAACG,QAAN,CAAeD,KAAf,EAAsBgB,YAAtB,CAAmCC,MAAnC;AACA,WAAOnB,KAAK,CAACG,QAAN,CAAeD,KAAf,CAAP;AACD,GAjBD;AAkBD","sourceRoot":"/src/modules/nlu/src/backend","sourcesContent":["import * as sdk from 'botpress/sdk'\nimport _ from 'lodash'\n\nimport { removeTrainingSession } from '../train-session-service'\nimport { NLUState, TrainingSession } from '../typings'\n\nexport function getOnBotUnmount(state: NLUState) {\n  return async (bp: typeof sdk, botId: string) => {\n    if (!state.nluByBot[botId]) {\n      return\n    }\n\n    const activeTrainSession: TrainingSession[] = _.chain(_.get(state.nluByBot[botId], 'trainSessions', {}))\n      .values()\n      .filter((trainSession: TrainingSession) => trainSession.status === 'training')\n      .value()\n\n    await Promise.map(activeTrainSession, async ts => {\n      await state.broadcastCancelTraining(botId, ts.language)\n      await removeTrainingSession(bp, botId, ts)\n    })\n\n    state.nluByBot[botId].trainWatcher.remove()\n    delete state.nluByBot[botId]\n  }\n}\n"]}