{"version":3,"sources":["entities/validation.ts"],"names":["FuzzyTolerance","Loose","Medium","Strict","EntityDefOccurrenceSchema","Joi","object","keys","name","string","required","synonyms","array","items","EntityDefCreateSchema","id","regex","invert","type","valid","sensitive","boolean","default","fuzzy","number","matchCase","examples","occurrences","pattern","allow"],"mappings":";;;;;;;AAAA;;;;AAEO,MAAMA,cAAc,GAAG;AAC5BC,EAAAA,KAAK,EAAE,IADqB;AAE5BC,EAAAA,MAAM,EAAE,GAFoB;AAG5BC,EAAAA,MAAM,EAAE;AAHoB,CAAvB;;;AAMP,MAAMC,yBAAyB,GAAGC,aAAIC,MAAJ,GAAaC,IAAb,CAAkB;AAClDC,EAAAA,IAAI,EAAEH,aAAII,MAAJ,GAAaC,QAAb,EAD4C;AAElDC,EAAAA,QAAQ,EAAEN,aAAIO,KAAJ,GAAYC,KAAZ,CAAkBR,aAAII,MAAJ,EAAlB;AAFwC,CAAlB,CAAlC;;AAKO,MAAMK,qBAAqB,GAAGT,aAAIC,MAAJ,GAAaC,IAAb,CAAkB;AACrDQ,EAAAA,EAAE,EAAEV,aAAII,MAAJ,GAAaO,KAAb,CAAmB,QAAnB,EAA6B;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAA7B,CADiD;AAErDT,EAAAA,IAAI,EAAEH,aAAII,MAAJ,GAAaC,QAAb,EAF+C;AAGrDQ,EAAAA,IAAI,EAAEb,aAAII,MAAJ,GACHU,KADG,CACG,CAAC,QAAD,EAAW,SAAX,EAAsB,MAAtB,CADH,EAEHT,QAFG,EAH+C;AAMrDU,EAAAA,SAAS,EAAEf,aAAIgB,OAAJ,GAAcC,OAAd,CAAsB,KAAtB,CAN0C;AAOrDC,EAAAA,KAAK,EAAElB,aAAImB,MAAJ,GAAaF,OAAb,CAAqBtB,cAAc,CAACE,MAApC,CAP8C;AAQrDuB,EAAAA,SAAS,EAAEpB,aAAIgB,OAAJ,EAR0C;AASrDK,EAAAA,QAAQ,EAAErB,aAAIO,KAAJ,GACPC,KADO,CACDR,aAAII,MAAJ,EADC,EAEPa,OAFO,CAEC,EAFD,CAT2C;AAYrDK,EAAAA,WAAW,EAAEtB,aAAIO,KAAJ,GACVC,KADU,CACJT,yBADI,EAEVkB,OAFU,CAEF,EAFE,CAZwC;AAerDM,EAAAA,OAAO,EAAEvB,aAAII,MAAJ,GACNa,OADM,CACE,EADF,EAENO,KAFM,CAEA,EAFA;AAf4C,CAAlB,CAA9B","sourceRoot":"/src/modules/nlu/src/backend","sourcesContent":["import Joi from 'joi'\n\nexport const FuzzyTolerance = {\n  Loose: 0.65,\n  Medium: 0.8,\n  Strict: 1\n}\n\nconst EntityDefOccurrenceSchema = Joi.object().keys({\n  name: Joi.string().required(),\n  synonyms: Joi.array().items(Joi.string())\n})\n\nexport const EntityDefCreateSchema = Joi.object().keys({\n  id: Joi.string().regex(/\\t\\s/gi, { invert: true }),\n  name: Joi.string().required(),\n  type: Joi.string()\n    .valid(['system', 'pattern', 'list'])\n    .required(),\n  sensitive: Joi.boolean().default(false),\n  fuzzy: Joi.number().default(FuzzyTolerance.Medium),\n  matchCase: Joi.boolean(),\n  examples: Joi.array()\n    .items(Joi.string())\n    .default([]),\n  occurrences: Joi.array()\n    .items(EntityDefOccurrenceSchema)\n    .default([]),\n  pattern: Joi.string()\n    .default('')\n    .allow('')\n})\n"]}