{"version":3,"sources":["train-session-service.ts"],"names":["DEFAULT_TRAINING_SESSION","status","progress","makeTrainSessionKey","botId","language","makeTrainingSession","lock","getTrainingSession","bp","key","trainSession","kvs","forBot","get","setTrainingSession","set","_","omit","removeTrainingSession","removeStorageKeysStartingWith"],"mappings":";;;;;;;;;;AACA;;;;AAIA,MAAMA,wBAAkD,GAAG;AACzDC,EAAAA,MAAM,EAAE,MADiD;AAEzDC,EAAAA,QAAQ,EAAE;AAF+C,CAA3D;;AAKO,MAAMC,mBAAmB,GAAG,CAACC,KAAD,EAAgBC,QAAhB,KAA8C,YAAWD,KAAM,IAAGC,QAAS,EAAvG;;;;AAEA,MAAMC,mBAAmB,GAAG,CAACD,QAAD,EAAmBE,IAAnB,MAA6D;AAC9FN,EAAAA,MAAM,EAAE,UADsF;AAE9FC,EAAAA,QAAQ,EAAE,CAFoF;AAG9FG,EAAAA,QAH8F;AAI9FE,EAAAA;AAJ8F,CAA7D,CAA5B;;;;AAOA,eAAeC,kBAAf,CAAkCC,EAAlC,EAAkDL,KAAlD,EAAiEC,QAAjE,EAA6G;AAClH,QAAMK,GAAG,GAAGP,mBAAmB,CAACC,KAAD,EAAQC,QAAR,CAA/B;AACA,QAAMM,YAAY,GAAG,MAAMF,EAAE,CAACG,GAAH,CAAOC,MAAP,CAAcT,KAAd,EAAqBU,GAArB,CAAyBJ,GAAzB,CAA3B;AACA,SAAOC,YAAY,IAAI,EAAE,GAAGX,wBAAL;AAA+BK,IAAAA;AAA/B,GAAvB;AACD;;AAEM,SAASU,kBAAT,CAA4BN,EAA5B,EAA4CL,KAA5C,EAA2DO,YAA3D,EAAwG;AAC7G,QAAMD,GAAG,GAAGP,mBAAmB,CAACC,KAAD,EAAQO,YAAY,CAACN,QAArB,CAA/B;AACA,SAAOI,EAAE,CAACG,GAAH,CAAOC,MAAP,CAAcT,KAAd,EAAqBY,GAArB,CAAyBN,GAAzB,EAA8BO,gBAAEC,IAAF,CAAOP,YAAP,EAAqB,MAArB,CAA9B,CAAP;AACD;;AAEM,eAAeQ,qBAAf,CACLV,EADK,EAELL,KAFK,EAGLO,YAHK,EAIU;AACf,QAAMF,EAAE,CAACG,GAAH,CAAOC,MAAP,CAAcT,KAAd,EAAqBgB,6BAArB,CAAmDjB,mBAAmB,CAACC,KAAD,EAAQO,YAAY,CAACN,QAArB,CAAtE,CAAN;AACD","sourceRoot":"/src/modules/nlu/src/backend","sourcesContent":["import * as sdk from 'botpress/sdk'\nimport _ from 'lodash'\n\nimport { TrainingSession } from './typings'\n\nconst DEFAULT_TRAINING_SESSION: Partial<TrainingSession> = {\n  status: 'idle',\n  progress: 0\n}\n\nexport const makeTrainSessionKey = (botId: string, language: string): string => `training:${botId}:${language}`\n\nexport const makeTrainingSession = (language: string, lock: sdk.RedisLock): TrainingSession => ({\n  status: 'training',\n  progress: 0,\n  language,\n  lock\n})\n\nexport async function getTrainingSession(bp: typeof sdk, botId: string, language: string): Promise<TrainingSession> {\n  const key = makeTrainSessionKey(botId, language)\n  const trainSession = await bp.kvs.forBot(botId).get(key)\n  return trainSession || { ...DEFAULT_TRAINING_SESSION, language }\n}\n\nexport function setTrainingSession(bp: typeof sdk, botId: string, trainSession: TrainingSession): Promise<any> {\n  const key = makeTrainSessionKey(botId, trainSession.language)\n  return bp.kvs.forBot(botId).set(key, _.omit(trainSession, 'lock'))\n}\n\nexport async function removeTrainingSession(\n  bp: typeof sdk,\n  botId: string,\n  trainSession: TrainingSession\n): Promise<void> {\n  await bp.kvs.forBot(botId).removeStorageKeysStartingWith(makeTrainSessionKey(botId, trainSession.language))\n}\n"]}