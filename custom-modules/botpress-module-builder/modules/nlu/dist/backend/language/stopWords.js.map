{"version":3,"sources":["language/stopWords.ts"],"names":["StopWordsByLang","loadStopWords","language","filePath","path","join","__dirname","fse","pathExists","Promise","resolve","reject","stopWords","stream","rl","readline","createInterface","input","crlfDelay","Infinity","on","l","push","getStopWordsForLang"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,eAAuC,GAAG,EAAhD;;AAEA,eAAeC,aAAf,CAA6BC,QAA7B,EAAkE;AAChE,QAAMC,QAAQ,GAAGC,cAAKC,IAAL,CAAUC,SAAV,EAAsB,cAAaJ,QAAS,MAA5C,CAAjB;;AAEA,MAAI,EAAE,MAAMK,iBAAIC,UAAJ,CAAeL,QAAf,CAAR,CAAJ,EAAuC;AACrC,WAAO,EAAP;AACD;;AAED,SAAO,IAAIM,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAMC,SAAS,GAAG,EAAlB;AACA,UAAMC,MAAM,GAAG,0BAAiBV,QAAjB,CAAf;;AACA,UAAMW,EAAE,GAAGC,kBAASC,eAAT,CAAyB;AAAEC,MAAAA,KAAK,EAAEJ,MAAT;AAAiBK,MAAAA,SAAS,EAAEC;AAA5B,KAAzB,CAAX;;AAEAL,IAAAA,EAAE,CAACM,EAAH,CAAM,MAAN,EAAcC,CAAC,IAAI;AACjBT,MAAAA,SAAS,CAACU,IAAV,CAAeD,CAAf;AACD,KAFD;AAIAP,IAAAA,EAAE,CAACM,EAAH,CAAM,OAAN,EAAe,MAAMV,OAAO,CAACE,SAAD,CAA5B;AACD,GAVM,CAAP;AAWD;;AAEM,eAAeW,mBAAf,CAAmCrB,QAAnC,EAAwE;AAC7E,MAAI,CAACF,eAAe,CAACE,QAAD,CAApB,EAAgC;AAC9BF,IAAAA,eAAe,CAACE,QAAD,CAAf,GAA4B,MAAMD,aAAa,CAACC,QAAD,CAA/C;AACD;;AAED,SAAOF,eAAe,CAACE,QAAD,CAAtB;AACD","sourceRoot":"/src/modules/nlu/src/backend","sourcesContent":["import { createReadStream } from 'fs'\nimport fse from 'fs-extra'\nimport path from 'path'\nimport readline from 'readline'\n\nconst StopWordsByLang: _.Dictionary<string[]> = {}\n\nasync function loadStopWords(language: string): Promise<string[]> {\n  const filePath = path.join(__dirname, `stop-words/${language}.txt`)\n\n  if (!(await fse.pathExists(filePath))) {\n    return []\n  }\n\n  return new Promise((resolve, reject) => {\n    const stopWords = []\n    const stream = createReadStream(filePath)\n    const rl = readline.createInterface({ input: stream, crlfDelay: Infinity })\n\n    rl.on('line', l => {\n      stopWords.push(l)\n    })\n\n    rl.on('close', () => resolve(stopWords))\n  })\n}\n\nexport async function getStopWordsForLang(language: string): Promise<string[]> {\n  if (!StopWordsByLang[language]) {\n    StopWordsByLang[language] = await loadStopWords(language)\n  }\n\n  return StopWordsByLang[language]\n}\n"]}