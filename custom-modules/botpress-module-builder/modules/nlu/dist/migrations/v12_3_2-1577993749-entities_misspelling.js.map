{"version":3,"sources":["../migrations/v12_3_2-1577993749-entities_misspelling.ts"],"names":["migration","info","description","target","type","up","bp","metadata","migrateBotEntities","botId","bpfs","ghost","forBot","entFiles","directoryListing","fileName","entityDef","readFileAsObject","occurrences","_","cloneDeep","upsertFile","JSON","stringify","undefined","bots","getAllBots","Promise","map","keys","success","message"],"mappings":";;;;;;;AACA;;;;AAEA,MAAMA,SAA8B,GAAG;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,WAAW,EAAE,gDADT;AAEJC,IAAAA,MAAM,EAAE,KAFJ;AAGJC,IAAAA,IAAI,EAAE;AAHF,GAD+B;AAMrCC,EAAAA,EAAE,EAAE,OAAO;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAP,KAAmF;AACrF,UAAMC,kBAAkB,GAAG,MAAOC,KAAP,IAAyB;AAClD,YAAMC,IAAI,GAAGJ,EAAE,CAACK,KAAH,CAASC,MAAT,CAAgBH,KAAhB,CAAb;AACA,YAAMI,QAAQ,GAAG,MAAMH,IAAI,CAACI,gBAAL,CAAsB,YAAtB,EAAoC,QAApC,CAAvB;;AACA,WAAK,MAAMC,QAAX,IAAuBF,QAAvB,EAAiC;AAC/B,cAAMG,SAAS,GAAI,MAAMN,IAAI,CAACO,gBAAL,CAAsB,YAAtB,EAAoCF,QAApC,CAAzB;AACAC,QAAAA,SAAS,CAACE,WAAV,GAAwBC,gBAAEC,SAAF,CAAYJ,SAAS,CAAC,YAAD,CAArB,CAAxB;AACA,eAAOA,SAAS,CAAC,YAAD,CAAhB;AACA,cAAMN,IAAI,CAACW,UAAL,CAAgB,YAAhB,EAA8BN,QAA9B,EAAwCO,IAAI,CAACC,SAAL,CAAeP,SAAf,EAA0BQ,SAA1B,EAAqC,CAArC,CAAxC,CAAN;AACD;AACF,KATD;;AAUA,QAAIjB,QAAQ,CAACE,KAAb,EAAoB;AAClB,YAAMD,kBAAkB,CAACD,QAAQ,CAACE,KAAV,CAAxB;AACD,KAFD,MAEO;AACL,YAAMgB,IAAI,GAAG,MAAMnB,EAAE,CAACmB,IAAH,CAAQC,UAAR,EAAnB;AACA,YAAMC,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,IAAL,EAAZ,EAAyBpB,KAAK,IAAID,kBAAkB,CAACC,KAAD,CAApD,CAAN;AACD;;AAED,WAAO;AAAEqB,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAAP;AACD;AAzBoC,CAAvC;eA4Be/B,S","sourceRoot":"/src/modules/nlu/src/backend","sourcesContent":["import * as sdk from 'botpress/sdk'\nimport _ from 'lodash'\n\nconst migration: sdk.ModuleMigration = {\n  info: {\n    description: 'Updates misspelled property in custom entities',\n    target: 'bot',\n    type: 'content'\n  },\n  up: async ({ bp, metadata }: sdk.ModuleMigrationOpts): Promise<sdk.MigrationResult> => {\n    const migrateBotEntities = async (botId: string) => {\n      const bpfs = bp.ghost.forBot(botId)\n      const entFiles = await bpfs.directoryListing('./entities', '*.json')\n      for (const fileName of entFiles) {\n        const entityDef = (await bpfs.readFileAsObject('./entities', fileName)) as sdk.NLU.EntityDefinition\n        entityDef.occurrences = _.cloneDeep(entityDef['occurences'])\n        delete entityDef['occurences']\n        await bpfs.upsertFile('./entities', fileName, JSON.stringify(entityDef, undefined, 2))\n      }\n    }\n    if (metadata.botId) {\n      await migrateBotEntities(metadata.botId)\n    } else {\n      const bots = await bp.bots.getAllBots()\n      await Promise.map(bots.keys(), botId => migrateBotEntities(botId))\n    }\n\n    return { success: true, message: \"Entities' properties updated successfully\" }\n  }\n}\n\nexport default migration\n"]}